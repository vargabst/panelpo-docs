{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Panel PO US Funciones del Panel PO.","title":"Panel PO US"},{"location":"#panel-po-us","text":"Funciones del Panel PO.","title":"Panel PO US"},{"location":"archivo_core/","text":"Back End (Proceso interno) Paquetes pandas - Procesamiento de datos estructurados. os - Uso de funciones del sistema operativo. openpyxl - Tratamiento de archivos Excel. tkinter - Generaci\u00f3n de interfaces. numpy - Realizaci\u00f3n de c\u00e1lculos complejos. datetime - Uso de fechas y horas. pickle - Encriptaci\u00f3n de archivos (memoria). re - Uso de l\u00f3gicas de expresiones regulares. math - Librer\u00eda nativa de Python para operaciones complejas. tempfile - Uso de archivos temporales. Funciones nativas en Archivo 'core.py' core.InstantesSalidas core. InstantesSalidas (inicio_periodo: datetime , intervalo: int , nSalidas: int ) Esta funci\u00f3n retorna una lista con una cantidad definida de instantes de tiempo en el formato HH:MM:SS iniciando en inicio_periodo, espaciados de acuerdo al intervalo. Par\u00e1metros: inicio_periodo : Instante en formato HH:MM:SS. intervalo : Valor de espaciamiento entre instantes (en minutos). nSalidas : Valor de cantidad de instantes a generar. core.redondear_al_minuto core. redondear_al_minuto (td: timedelta , min_=1: int ) Redondea un timedelta. Por defecto es al minuto. Se puede indicar como segundo argumento una cantidad decimal de minutos. (ej: 30s -> 0.5) Par\u00e1metros: td : Valor de tipo timedelta . min_ : Valor de minutos en decimal. core.int_codigo core. int_codigo (codigo: str) Convierte un c\u00f3digo desde string a int (si es posible). Par\u00e1metros: codigo : Valor de tipo str . core.new_durac_periodo core. new_durac_periodo (d2: datetime , d1: datetime) Calcula la duraci\u00f3n de un periodo de tiempo entre d1 y d2. Par\u00e1metros: d2 : M\u00e1ximo valor del periodo. d1 : M\u00ednimo valor del periodo. core.duracion_ok core. duracion_ok (row: pandas.Series) Analiza una fila de un DataFrame con las columnas 'DURACION' y 'DURACION_MOD'. Si la columna 'DURACION_MOD' es nula o igual a cero, entonces retorna el valor de la columna 'DURACION'; si no, retorna el valor de la columna 'DURACION_MOD' Par\u00e1metros: row : Fila del DataFrame a analizar. core.melting_cons core. melting_cons (cons: pandas.DataFrame , version=1: int) Convierte los nombres de las columnas de un Consolidado de Salidas en una sola columna con valores. Si la versi\u00f3n es 1, entonces permite aplicar la funci\u00f3n en columnas con abreviaciones en unidad, servicio y sentido. Si la versi\u00f3n es distinta de 1, entonces permite aplicar la funci\u00f3n en columnas con los nombres originales. Par\u00e1metros: cons : DataFrame del archivo Consolidado de Salidas. version : Valor que define el tipo de pandas.melt a utilizar. core.replace_char core. replace_char (s: str , old_char: str , new_char: int) Reemplaza un car\u00e1cter por otro en un string. Par\u00e1metros: s : String a alterar. old_char : Valor del car\u00e1cter del string que se necesita reemplazar. new_char : Valor del car\u00e1cter del string que se desea incorporar. core.difference_between_dt_times core. difference_between_dt_times (a: timestamp , b: timestamp ) Retorna la diferencia (en horas) entre los tiempos a y b. Par\u00e1metros: a : Timestamp de inter\u00e9s. b : Timestamp de inter\u00e9s. core.fileChoose core. fileChoose () Llama a la funci\u00f3n askopenfilename de la librer\u00eda filedialog . Esta abre una ventana de Windows para obtener el nombre de un archivo. Retorna el nombre del archivo seleccionado. core.formulaCheck core. formulaCheck (filename: str ) Verifica que el archivo Excel a cargar no tenga f\u00f3rmulas en alguna de sus celdas. Par\u00e1metros: filename : Nombre del archivo Excel seleccionado. core.hiddenSheetsCheck core. hiddenSheetsCheck (filename: str ) Verifica que el archivo Excel a cargar no tenga hojas ocultas. Par\u00e1metros: filename : Nombre del archivo Excel seleccionado. core.is_valid_time core. is_valid_time (value: any ) Verifica que el valor sea de tipo datetime.time . Par\u00e1metros: value : Valor a analizar. core.timeFormatCheck core. timeFormatCheck (filename: str ) Verifica que las marcas horarias en el archivo Excel sean de tipo datetime.time . Par\u00e1metros: filename : Nombre del archivo Excel seleccionado. core.chunker core. chunker (seq: list , size: int ) Genera una estructura auxiliar de datos para recorrer una lista seleccionando size elementos. Par\u00e1metros: seq : La lista de valores a intervenir. size : Cantidad de elementos a agrupar de la lista. core.chunker_df core. chunker_df (seq: pandas.DataFrame , size: int ) Genera una estructura auxiliar de datos para recorrer un dataframe seleccionando size filas. Par\u00e1metros: seq : Dataframe a intervenir. size : Cantidad de filas a agrupar del dataframe. core.get_second_minimum core. get_second_minimum (x: list ) Entrega el segundo valor m\u00ednimo (mayor que el m\u00ednimo global) Par\u00e1metros: x : Lista con elementos ordenables. core.convertir_horario_dia_siguiente core. convertir_horario_dia_siguiente (hi: timestamp , ht: timestamp ) Retorna los horarios hi y ht (usualmente tomados desde las primera y \u00faltima marca horaria programada como salida) en formato \"DD/MM/YYYY HH:MM:SS\" para realizar operaciones de comparaci\u00f3n en programaci\u00f3n de operaciones. Esta funci\u00f3n permite convertir el mayor horario al d\u00eda siguiente para permitir operaciones de comparaci\u00f3n consistentes. Par\u00e1metros: hi : Marca horaria menor. ht : Marca horaria mayor. core.arreglar_horarios_inicio_fin core. arreglar_horarios_inicio_fin (first_exp_time: timestamp , second_exp_time: timestamp , last_exp_time: timestamp ) Retorna los horarios de inicio (menor) y de fin (mayor) (usualmente tomados desde las primera y \u00faltima marca horaria programada como salida) en formato \"DD/MM/YYYY HH:MM:SS\" para realizar operaciones de comparaci\u00f3n en programaci\u00f3n de operaciones. Esta funci\u00f3n realiza una estrategia de comparaci\u00f3n en la diferencia entre la primera y la segunda marca horaria del d\u00eda, para estimar correctamente la posici\u00f3n (en d\u00edas) del horario mayor. Par\u00e1metros: first_exp_time : Marca horaria menor. second_exp_time : Marca horaria segunda menor. last_exp_time : Marca horaria mayor. core.get_first_and_last_exp core. get_first_and_last_exp (sub_df: pandas.DataFrame ) Esta funci\u00f3n recibe un subconjunto de filas de la tabla Anexo 4 cargada en el programa y entrega los tiempos de la primera (menor) y \u00faltima (mayor) salida programada. Par\u00e1metros: sub_df : Subconjunto del DataFrame del Anexo 4 cargado. core.get_limits_tramos core. get_limits_tramos (sub_df: pandas.DataFrame ) Esta funci\u00f3n recibe un subconjunto de filas de la tabla Anexo 4 cargada en el programa y retorna un dataframe con los tiempos de la primera (menor) y \u00faltima (mayor) salida programada, por cada tramo horario definido en un tipo de d\u00eda. Esta funci\u00f3n se aplica en los casos en los que se sabe que el servicio-sentido-tipod\u00eda tiene dos tramos. Par\u00e1metros: sub_df : Subconjunto del DataFrame del Anexo 4 cargado. core.filter_max_values_dict core. filter_max_values_dict (dict_obj: dict ) Esta funci\u00f3n recibe un diccionario, el cual tiene valores enteros; y retorna otro diccionario filtrado solo con valores mayores a 3. Par\u00e1metros: dict_obj : Diccionario con valores enteros. core.dt_time_to_hours core. dt_time_to_hours (time: datetime.time ) Esta funci\u00f3n recibe una marca horaria y retorna la cantidad de horas de la marca (con decimales) Par\u00e1metros: time : Marca horaria core.comp_durac_tolerance core. comp_durac_tolerance (durac_a3: datetime.time , durac_a4: datetime.time ) Esta funci\u00f3n aplica la regla de tolerancia en la duraci\u00f3n de las expediciones seg\u00fan el Anexo 4, dependiente de la duraci\u00f3n programada seg\u00fan el Anexo 3. Retorna un booleano y los l\u00edmites de tolerancia calculados. Par\u00e1metros: durac_a3 : Duraci\u00f3n en minutos de las expediciones programadas en el servicio-sentido-tipod\u00eda-mediahora. durac_a4 : Duraci\u00f3n en minutos de la expedici\u00f3n programada en el servicio-sentido-tipod\u00eda. core.comp_iprog_tolerance core. comp_iprog_tolerance (iprog: int , imin: int , imax: int ) Esta funci\u00f3n aplica la regla de tolerancia en los intervalos de salidas del Anexo 4, de acuerdo con la programaci\u00f3n calculada por salidas por media hora seg\u00fan el Anexo 3. Par\u00e1metros: iprog : Intervalo promedio calculado desde Anexo 3 (tiempo/salidas) imin : M\u00ednimo intervalo observado en la programaci\u00f3n de salidas seg\u00fan Anexo 4. imax : M\u00e1ximo intervalo observado en la programaci\u00f3n de salidas seg\u00fan Anexo 4. core.has_more_than_two_decimals core. has_more_than_two_decimals (value: float ) Esta funci\u00f3n chequea si un valor tiene m\u00e1s de dos decimales. Retorna True si tiene m\u00e1s de dos decimales, False en caso contrario. Par\u00e1metros: value : Valor a analizar. core.has_seconds_greater_than_zero core. has_seconds_greater_than_zero (time_obj: datetime.time ) Esta funci\u00f3n chequea si un horario tiene segundos. Par\u00e1metros: time_obj : Marca horaria a analizar. core.count_zeroes core. count_zeroes (list_: list ) Esta funci\u00f3n cuenta cu\u00e1ntos ceros hay al inicio y al final de una lista. Retorna las cantidades en una tupla. Par\u00e1metros: list_ : Lista con valores enteros. core.asignacion core. asignacion (salidas_periodo: int , duracion_periodo: int , grad: int , mhvaciasinicio=0: int , mhvaciastermino=0: int ) Esta funci\u00f3n realiza la distribuci\u00f3n de salidas originalmente en un periodo, por cada media hora de operaci\u00f3n del servicio-sentido-tipod\u00eda. Par\u00e1metros: salidas_periodo : Cantidad de salidas asociadas al servicio-sentido-periodo. duracion_periodo : Duracion (en horas) del periodo. grad : Valor que indica si el pr\u00f3ximo periodo aumenta o disminuye salidas. mhvaciasinicio : Cantidad de medias horas sin salidas al inicio del periodo. mhvaciastermino : Cantidad de medias horas sin salidas al final del periodo. core.dt_time_to_dt_dt core. dt_time_to_dt_dt (time: any ) Esta funci\u00f3n recibe una marca horaria y la convierte en objeto datetime.datetime. Par\u00e1metros: time : Marca horaria. core.all_to_dt_time core. all_to_dt_time (dt_time: any ) Esta funci\u00f3n recibe una marca horaria (en cualquier formato) y la convierte en objeto datetime.datetime. Par\u00e1metros: dt_time : Marca horaria. core.delete_files_in_folder core. delete_files_in_folder (folder_path: str ) Esta funci\u00f3n recibe la direcci\u00f3n de una carpeta en el ordenador, y elimina todos los archivos en su interior. Par\u00e1metros: folder_path : Direcci\u00f3n de una carpeta particular. core.periodo_inicio core. periodo_inicio (hora: int , minutos: int ) Esta funci\u00f3n recibe un valor de horas y un valor de minutos, y retorna un objeto de tipo datetime.time aproximado a la media hora anterior de la marca horaria. Par\u00e1metros: hora : Valor de horas. minutos : Valor de minutos. core.new_periodo_inicio core. new_periodo_inicio (hora: int ) Esta funci\u00f3n recibe un valor de horas, y retorna un objeto de tipo datetime.time aproximado a la hora de la marca horaria. Par\u00e1metros: hora : Valor de horas. core.aux_salidas core. aux_salidas (s_ant: int , s: int , s_sig: int ) Esta funci\u00f3n recibe tres valores de salidas (para tres MH consecutivas) y retorna valores intermedios en funci\u00f3n de ellos. Par\u00e1metros: s_ant : Cantidad de salidas de la MH anterior. s : Cantidad de salidas de la MH actual. s_sig : Cantidad de salidas de la MH siguiente. core.clasif_an_frec core. clasif_an_frec (frec: float ) Esta funci\u00f3n recibe un valor de frecuencias y retorna una clasificaci\u00f3n para el an\u00e1lisis de frecuencias. Par\u00e1metros: frec : Valor real asociado a buses por hora en un periodo. Clase PanelUS Atributos iniciales PanelUS . unidad (type: str , default = '0') Variable que guarda el valor de la unidad de servicio seleccionada por usuario para generar revisiones espec\u00edficas en Panel. PanelUS . anexo1 (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n completa del Anexo 1. PanelUS . anexo1_name (type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Anexo 1 Nuevo. PanelUS . anexo3 (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n completa del Anexo 3 Nuevo. PanelUS . anexo3_name (type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Anexo 3 Nuevo. PanelUS . anexo3b (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n completa del Anexo 3 Vigente. PanelUS . anexo3b_name (type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Anexo 3 Vigente. PanelUS . anexo4 (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n completa del Anexo 4 Nuevo. PanelUS . anexo4_name (type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Anexo 4 Nuevo. PanelUS . anexo4_solocomerc (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n de salidas comerciales (C01) del Anexo 4 Nuevo. PanelUS . anexo4_capac (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n de capacidades de buses del Anexo 4 Nuevo. PanelUS . anexo4b (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n completa del Anexo 4 Vigente. PanelUS . anexo4b_name (type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Anexo 4 Vigente. PanelUS . anexo4b_solocomerc (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n de salidas comerciales (C01) del Anexo 4 Vigente. PanelUS . anexo4b_capac (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n de capacidades de buses del Anexo 4 Vigente. PanelUS . consolidado (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n del Consolidado de Salidas. PanelUS . consolidado_name (type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Consolidado de Salidas. PanelUS . consolidado_frec (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con informaci\u00f3n de frecuencias, calculadas desde el Consolidado de Salidas. PanelUS . consolidado_par (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n del Registro Consolidado de Paradas. PanelUS . consolidado_par_name (type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Registro Consolidado de Paradas. PanelUS . base_cons (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n base de Servicios-Sentido en el orden preestablecido hist\u00f3rico de los Consolidados. PanelUS . base_cons_name (type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n base de Servicios-Sentido en el orden preestablecido hist\u00f3rico de los Consolidados. PanelUS . periodos (type: pandas.DataFrame , default = Informaci\u00f3n de Periodos*) Variable que guarda la estructura del DataFrame con informaci\u00f3n de periodos seg\u00fan tipo d\u00eda, media hora, duraci\u00f3n de cada periodo y otras columnas que auxilian la tarea de distribuci\u00f3n de salidas asignadas por periodo. PanelUS . periodos_data (type: pandas.DataFrame , default = Informaci\u00f3n de Periodos*) Variable que guarda la estructura del DataFrame con informaci\u00f3n de periodos seg\u00fan tipo d\u00eda y media hora. Guarda la estructura original de la tabla anterior, sin las columnas auxiliares del proceso de distribuci\u00f3n de salidas asignadas por periodo PanelUS . gradiente (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de tendencias en la asignaci\u00f3n de salidas por periodo en el Consolidado. Por ejemplo, si en el siguiente periodo aumentan o disminuyen las salidas. PanelUS . anexo3_w_inconsist (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante del an\u00e1lisis de consistencia del Anexo 3 Nuevo. PanelUS . anexo4_w_inconsist (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante del an\u00e1lisis de consistencia del Anexo 4 Nuevo. PanelUS . validacion_a4_a1 (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante de la comparaci\u00f3n de horarios de salida (A4) y operaci\u00f3n (A1). PanelUS . validacion_a4_a3 (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante de la comparaci\u00f3n de par\u00e1metros de operaci\u00f3n definidos en Anexo 3 y Anexo 4. PanelUS . validacion_a4_a3_x_mha (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante de la comparaci\u00f3n de par\u00e1metros de operaci\u00f3n definidos en Anexo 3 y Anexo 4, por media hora agrupada seg\u00fan Anexo 3. PanelUS . result_comp_a3v_a3n (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante de la comparaci\u00f3n de par\u00e1metros de operaci\u00f3n definidos en Anexo 3 Nuevo y Anexo 3 Vigente. PanelUS . validacion_a4_interv_mha_trusted (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante de la validaci\u00f3n de intervalos programados de salidas en el Anexo 4, considerando las agrupaciones del Anexo 3. PanelUS . anexo1_new (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con la informaci\u00f3n formateada del Anexo 1, construido a partir del Anexo 4. PanelUS . a3_from_a4_final (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con la informaci\u00f3n formateada del Anexo 3, construido a partir del Anexo 4. PanelUS . a4_from_a3 (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con la informaci\u00f3n formateada del Anexo 4, construido a partir del Anexo 3. PanelUS . anexo3_ns_w_base (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n formateada del Anexo 3, construido a partir del Consolidado de Salidas (distribuidas). PanelUS . perfil_flota (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de cantidad de flota operando por cada media hora en una unidad. PanelUS . cons_a3_frec (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de frecuencias consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros. PanelUS . cons_a3_cap (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de capacidades consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros. PanelUS . cons_a3_sal (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de salidas consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros. PanelUS . cons_a3_vel (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de velocidades promedio consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros. PanelUS . cons_a3_dist (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de distancias totales consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros. PanelUS . cons_a3_dist_int (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de distancias totales consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros. PanelUS . cons_a3_fmax (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de flota m\u00e1xima consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros. PanelUS . a3_cons_mh (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n consolidada de frecuencias por media hora. PanelUS . a3_lab_n (type: bool , default = False) Variable booleana que identifica si hay d\u00edas laborales en el Anexo 3 Nuevo. PanelUS . a3_sab_n (type: bool , default = False) Variable booleana que identifica si hay d\u00edas s\u00e1bado en el Anexo 3 Nuevo. PanelUS . a3_dom_n (type: bool , default = False) Variable booleana que identifica si hay d\u00edas domingo en el Anexo 3 Nuevo. PanelUS . a3_lab_v (type: bool , default = False) Variable booleana que identifica si hay d\u00edas laborales en el Anexo 3 Vigente. PanelUS . a3_sab_v (type: bool , default = False) Variable booleana que identifica si hay d\u00edas s\u00e1bado en el Anexo 3 Vigente. PanelUS . a3_dom_v (type: bool , default = False) Variable booleana que identifica si hay d\u00edas domingo en el Anexo 3 Vigente. PanelUS . df_km (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con informaci\u00f3n de kil\u00f3metros totales por tipo d\u00eda. PanelUS . cons_interv (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con informaci\u00f3n de intervalo promedio de salidas por periodo (formato Consolidado). PanelUS . cuenta_ss (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de cantidad de Servicios-Sentido por unidad y por periodo que se agregan por cada categor\u00eda de frecuencias. PanelUS . perc_ss_nivel_frec (type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n final de proporciones (porcentaje) de Servicios-Sentido por unidad y por periodo que se agregan por cada categor\u00eda de frecuencias. PanelUS . revision_biportal (type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con informaci\u00f3n de salidas programadas en Anexo 4 asignadas err\u00f3neamente a buses que no pueden operar en servicios que atienden paraderos de puerta izquierda. Funciones (m\u00e9todos) PanelUS . reset PanelUS . reset () Reinicia todos los atributos iniciales del Panel. PanelUS . consulta_de_salidas PanelUS . consulta_de_salidas (servicio: _str , sentido: str , periodo: str ) Lee el Consolidado de Salidas y retorna el n\u00famero de salidas efectuadas durante el periodo seg\u00fan el consolidado. Si no encuentra el Servicio-Sentido-Periodo retorna un valor NaN. Par\u00e1metros servicio : Identificador del servicio (C\u00f3digo TS) sentido : Identificador del sentido (\"Ida\", \"Ret\") periodo : Identificador del periodo (Abreviatura) PanelUS . consulta_de_gradiente PanelUS . consulta_de_gradiente (servicio: _str , sentido: str , periodo: str ) Lee el Consolidado de Salidas y retorna el valor del gradiente en el periodo seg\u00fan el consolidado-gradiente. Si no encuentra el Servicio-Sentido-Periodo retorna un valor NaN. Par\u00e1metros servicio : Identificador del servicio (C\u00f3digo TS) sentido : Identificador del sentido (\"Ida\", \"Ret\") periodo : Identificador del periodo (Abreviatura) PanelUS . save_all_anexos PanelUS ._ save_all_anexos () Guarda todos los archivos cargados en el Panel, en formato encriptado, para permitir su recarga al reiniciar el programa. PanelUS . load_all_anexos PanelUS . load_all_anexos (files_in_memory: _list ) Carga todos los archivos guardados en la memoria del Panel. Par\u00e1metros files_in_memory : Lista con los nombres de los archivos guardados en la memoria del panel. PanelUS . clear_all_anexos PanelUS . clear_all_anexos (path : str ) Borra todos los archivos guardados en la memoria del Panel. Par\u00e1metros path_ : Nombre de la direcci\u00f3n de la carpeta de memoria. PanelUS . load_A1 PanelUS ._ load_A1 () Proceso que carga un archivo Excel Anexo 1 Nuevo. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales. PanelUS . load_A3 PanelUS ._ load_A3 () Proceso que carga un archivo Excel Anexo 3 Nuevo. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales. PanelUS . load_A4 PanelUS ._ load_A4 () Proceso que carga un archivo Excel Anexo 4 Nuevo. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas, hojas ocultas o las marcas temporales sin el formato adecuado. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales. Desde el Anexo 4 se obtienen la programaci\u00f3n completa de salidas, la programaci\u00f3n de salidas comerciales, y las capacidades de buses programados. PanelUS . load_A1b PanelUS ._ load_A1b () Proceso que carga un archivo Excel Anexo 1 Vigente. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales. PanelUS . load_A3b PanelUS ._ load_A3b () Proceso que carga un archivo Excel Anexo 3 Vigente. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales. PanelUS . load_A4b PanelUS ._ load_A4b () Proceso que carga un archivo Excel Anexo 4 Vigente. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales. Desde el Anexo 4 se obtienen la programaci\u00f3n completa de salidas, la programaci\u00f3n de salidas comerciales, y las capacidades de buses programados. PanelUS . load_cons PanelUS ._ load_cons () Proceso que carga un archivo Consolidado de Salidas. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales. PanelUS . consolidado_loader PanelUS ._ consolidado_loader () Procesamiento del archivo Consolidado de Salidas, para generar estructuras de datos auxiliares para la distribuci\u00f3n de salidas por media hora y el consolidado de frecuencias. El proceso es llamado por al interior de load_cons, as\u00ed tambi\u00e9n cuando se realiza una carga del consolidado desde la memoria. PanelUS . load_conspar PanelUS ._ load_conspar () Proceso que carga un archivo Consolidado de Paradas. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales. PanelUS . load_base_cons PanelUS ._ load_base_cons () Proceso que carga un archivo Base de Consolidado (para obtener el orden de servicios del archivo Consolidado). El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales. PanelUS . check_param_a3 PanelUS ._ check_param_a3 () Proceso que eval\u00faa la consistencia interna del Anexo 3. El proceso considera: Evaluar si las distancias est\u00e1n truncadas hasta dos decimales Evaluar si las velocidades est\u00e1n truncadas hasta dos decimales Evaluar si las marcas horarias en la columna MH no tienen segundos Evaluar si la unidad de servicio de la columna es equivalente a la seleccionada en el programa Evaluar si no existen servicios inyecci\u00f3n en el archivo El proceso guarda en una variable los casos en los que la evaluaci\u00f3n falla. PanelUS . check_param_a4 PanelUS ._ check_param_a4 () Proceso que eval\u00faa la consistencia interna del Anexo 4. El proceso considera: Evaluar si las marcas horarias en las columnas HORA_INICIO, PERIODO_INICIO, HORA_FIN, PERIODO_FIN y DURACION no tienen segundos Evaluar si las distancias est\u00e1n truncadas hasta dos decimales Evaluar si no existen datos incompletos (NaN) Evaluar si la unidad de servicio de la columna es equivalente a la seleccionada en el programa El proceso guarda en una variable los casos en los que la evaluaci\u00f3n falla. PanelUS . compare_a3v_a3n PanelUS ._ compare_a3v_a3n () Proceso que compara los par\u00e1metros de operaci\u00f3n entre el Anexo 3 Vigente y el Anexo 3 Nuevo. La comparaci\u00f3n de par\u00e1metros se realiza a nivel de Salidas, Velocidad, Distancia Base, Distancia Integrada, Indicador de Tiempo de Espera y Agrupaci\u00f3n de MH. PanelUS . compare_a1_a4 PanelUS ._ compare_a1_a4 () Proceso que compara los horarios de operaci\u00f3n seg\u00fan el Anexo 1, con las primera y \u00faltima salidas del Anexo 4, por cada Servicio-Sentido-TipoD\u00eda. Para realizar el proceso se debe obtener las primera y \u00faltima salida del Anexo 4 (a partir del proceso \"genera_a1_from_a4\") y realizar la comparaci\u00f3n con el Anexo 1. PanelUS . genera_a1_from_a4 PanelUS ._ genera_a1_from_a4 () Proceso que genera una estructura como la hoja de Horarios de Operaci\u00f3n del Anexo 1, identificando de forma correcta los casos en los que existe m\u00e1s de un tramo de operaci\u00f3n (y por tanto m\u00e1s de un horario de inicio y m\u00e1s de un horario de fin). Para realizar esto, toma como supuesto que [no existe una diferencia menor a 3 horas entre el fin de un tramo y el inicio de otro] , por lo que se centra en la identificaci\u00f3n de gaps de tiempo superiores a 3 horas en los tiempos de salida de un tipo d\u00eda para identificar m\u00e1s de un tramo, o si los inicios y fin se encuentran muy cercanos durante el espacio de la madrugada. El proceso guarda en una variable los casos en los que los horarios no coinciden. PanelUS . compare_a3_a4 PanelUS ._ compare_a3_a4 () Proceso que compara los par\u00e1metros de operaci\u00f3n seg\u00fan el Anexo 3, con los par\u00e1metros que son posibles de estimar a partir de la programaci\u00f3n de salidas del Anexo 4, por cada Servicio-Sentido-TipoD\u00eda. Para realizar el proceso se procesa el anexo 4, obteniendo las medidas o par\u00e1metros de operaci\u00f3n seg\u00fan las caracter\u00edsticas de la programaci\u00f3n de salidas, consolidando la informaci\u00f3n por media hora, de forma de poder comparar directamente la informaci\u00f3n del Anexo 3. El proceso guarda en una variable los casos en los que los par\u00e1metros no coinciden. PanelUS . check_intervalos_a3_trusted PanelUS ._ check_intervalos_a3_trusted () Proceso que eval\u00faa si los intervalos entre salidas programadas seg\u00fan el Anexo 4, cumplen con las restricciones de programaci\u00f3n seg\u00fan el intervalo programado del Anexo 3 (tiempo/salidas). El proceso se genera de acuerdo con la regla se\u00f1alada en el Manual de Programaci\u00f3n US. El proceso guarda en una variable los casos en los que el intervalo programado en el Anexo 4 no cumple la regla del Manual. PanelUS . a3_newslds_w_base PanelUS ._ a3_newslds_w_base () Proceso que genera una estructura de datos con informaci\u00f3n del Anexo 3 a partir de la informaci\u00f3n de salidas del Consolidado, y los horarios de operaci\u00f3n del Anexo 1. El proceso permite generar archivos de par\u00e1metros de operaci\u00f3n desde el Consolidado, para los fines que se estimen necesarios. El proceso est\u00e1 basado en una rutina de asignaci\u00f3n de salidas por media hora, y adem\u00e1s contempla la generaci\u00f3n \u00f3ptima de una columna con las agrupaciones de media hora. Sin embargo, el proceso est\u00e1 dise\u00f1ado para introducir las modificaciones de salidas y agrupaciones solo en los periodos en los que hubo cambios (de acuerdo con el Consolidado de Salidas). PanelUS . genera_a4_from_a3 PanelUS ._ genera_a4_from_a3 () Proceso que genera una estructura de datos con informaci\u00f3n del Anexo 4 (Tabla Horaria Simplificada) a partir de la informaci\u00f3n de par\u00e1metros de operaci\u00f3n seg\u00fan el Anexo 3. El proceso est\u00e1 basado en una rutina de programaci\u00f3n de salidas considerando las agrupaciones de MH y los horarios de operaci\u00f3n seg\u00fan el Anexo 1. PanelUS . genera_a3_from_a4 PanelUS ._ genera_a3_from_a4 () Proceso que genera una estructura de datos con informaci\u00f3n del Anexo 3 a partir de la informaci\u00f3n de salidas programadas del Anexo 4. El proceso consolida por media hora la informaci\u00f3n programada (similar a lo que se procesa en \"compare_a3_a4\"). PanelUS . genera_cons_frec PanelUS ._ genera_cons_frec () Proceso que genera una estructura de datos con informaci\u00f3n de frecuencias por periodo (similar al Consolidado de Salidas). PanelUS . calc_perfil_flota PanelUS ._ calc_perfil_flota () Proceso que genera una estructura de datos con informaci\u00f3n de flota operativa (cantidad de buses) por media hora en la unidad de servicio. PanelUS . cons_periodo_us PanelUS ._ cons_periodo_us () Proceso que genera una estructura de datos con informaci\u00f3n consolidada de par\u00e1metros de operaci\u00f3n por periodo. PanelUS . cons_mh_us PanelUS ._ cons_mh_us () Proceso que genera una estructura de datos con informaci\u00f3n consolidada de frecuencias por media hora. PanelUS . reagrupa_a3 PanelUS ._ reagrupa_a3 () Proceso que genera una nueva columna de agrupaci\u00f3n de medias horas en el Anexo 3 Nuevo. Este proceso se basa en una rutina de agrupaci\u00f3n de medias horas con reglas que permitan una distribuci\u00f3n suave de las salidas en cada media hora, y evitar una programaci\u00f3n inequitativa de salidas. PanelUS . conteo_km PanelUS ._ conteo_km () Proceso que genera una nueva estructura de datos con el resumen de los kil\u00f3metros programados de la unidad, por tipo de d\u00eda, a partir de cada Anexo 3 (Nuevo y Vigente) comparandolos entre s\u00ed. PanelUS . valid_cons_w_intervs PanelUS ._ valid_cons_w_intervs () Proceso que genera una nueva estructura de datos con el c\u00e1lculo de intervalos de salida programada, a partir de las salidas totales por periodo del Consolidado de Salidas. Esta herramienta permite alertar los casos en que la programaci\u00f3n de la salidas tiene tal nivel que puede producir intervalos de salida fuera del est\u00e1ndar (m\u00e1ximo 30 minutos en servicios regulares). PanelUS . generar_bases_analys_frec_cons PanelUS ._ generar_bases_analys_frec_cons () Proceso que genera una nueva estructura de datos analizando las frecuencias programadas promedio por periodo y SS, permitiendo su clasificaci\u00f3n y revisi\u00f3n. PanelUS . revisar_a4_buses_biportal PanelUS ._ revisar_a4_buses_biportal () Proceso que revisa que las salidas programadas en Anexo 4 en servicios que sirven en paradas de peurta izquierda, cuenten solo con buses de puerta izquierda programados.","title":"Back End (Proceso interno)"},{"location":"archivo_core/#back-end-proceso-interno","text":"","title":"Back End (Proceso interno)"},{"location":"archivo_core/#paquetes","text":"pandas - Procesamiento de datos estructurados. os - Uso de funciones del sistema operativo. openpyxl - Tratamiento de archivos Excel. tkinter - Generaci\u00f3n de interfaces. numpy - Realizaci\u00f3n de c\u00e1lculos complejos. datetime - Uso de fechas y horas. pickle - Encriptaci\u00f3n de archivos (memoria). re - Uso de l\u00f3gicas de expresiones regulares. math - Librer\u00eda nativa de Python para operaciones complejas. tempfile - Uso de archivos temporales.","title":"Paquetes"},{"location":"archivo_core/#funciones-nativas-en-archivo-corepy","text":"","title":"Funciones nativas en Archivo 'core.py'"},{"location":"archivo_core/#coreinstantessalidas","text":"core. InstantesSalidas (inicio_periodo: datetime , intervalo: int , nSalidas: int ) Esta funci\u00f3n retorna una lista con una cantidad definida de instantes de tiempo en el formato HH:MM:SS iniciando en inicio_periodo, espaciados de acuerdo al intervalo. Par\u00e1metros: inicio_periodo : Instante en formato HH:MM:SS. intervalo : Valor de espaciamiento entre instantes (en minutos). nSalidas : Valor de cantidad de instantes a generar.","title":"core.InstantesSalidas"},{"location":"archivo_core/#coreredondear_al_minuto","text":"core. redondear_al_minuto (td: timedelta , min_=1: int ) Redondea un timedelta. Por defecto es al minuto. Se puede indicar como segundo argumento una cantidad decimal de minutos. (ej: 30s -> 0.5) Par\u00e1metros: td : Valor de tipo timedelta . min_ : Valor de minutos en decimal.","title":"core.redondear_al_minuto"},{"location":"archivo_core/#coreint_codigo","text":"core. int_codigo (codigo: str) Convierte un c\u00f3digo desde string a int (si es posible). Par\u00e1metros: codigo : Valor de tipo str .","title":"core.int_codigo"},{"location":"archivo_core/#corenew_durac_periodo","text":"core. new_durac_periodo (d2: datetime , d1: datetime) Calcula la duraci\u00f3n de un periodo de tiempo entre d1 y d2. Par\u00e1metros: d2 : M\u00e1ximo valor del periodo. d1 : M\u00ednimo valor del periodo.","title":"core.new_durac_periodo"},{"location":"archivo_core/#coreduracion_ok","text":"core. duracion_ok (row: pandas.Series) Analiza una fila de un DataFrame con las columnas 'DURACION' y 'DURACION_MOD'. Si la columna 'DURACION_MOD' es nula o igual a cero, entonces retorna el valor de la columna 'DURACION'; si no, retorna el valor de la columna 'DURACION_MOD' Par\u00e1metros: row : Fila del DataFrame a analizar.","title":"core.duracion_ok"},{"location":"archivo_core/#coremelting_cons","text":"core. melting_cons (cons: pandas.DataFrame , version=1: int) Convierte los nombres de las columnas de un Consolidado de Salidas en una sola columna con valores. Si la versi\u00f3n es 1, entonces permite aplicar la funci\u00f3n en columnas con abreviaciones en unidad, servicio y sentido. Si la versi\u00f3n es distinta de 1, entonces permite aplicar la funci\u00f3n en columnas con los nombres originales. Par\u00e1metros: cons : DataFrame del archivo Consolidado de Salidas. version : Valor que define el tipo de pandas.melt a utilizar.","title":"core.melting_cons"},{"location":"archivo_core/#corereplace_char","text":"core. replace_char (s: str , old_char: str , new_char: int) Reemplaza un car\u00e1cter por otro en un string. Par\u00e1metros: s : String a alterar. old_char : Valor del car\u00e1cter del string que se necesita reemplazar. new_char : Valor del car\u00e1cter del string que se desea incorporar.","title":"core.replace_char"},{"location":"archivo_core/#coredifference_between_dt_times","text":"core. difference_between_dt_times (a: timestamp , b: timestamp ) Retorna la diferencia (en horas) entre los tiempos a y b. Par\u00e1metros: a : Timestamp de inter\u00e9s. b : Timestamp de inter\u00e9s.","title":"core.difference_between_dt_times"},{"location":"archivo_core/#corefilechoose","text":"core. fileChoose () Llama a la funci\u00f3n askopenfilename de la librer\u00eda filedialog . Esta abre una ventana de Windows para obtener el nombre de un archivo. Retorna el nombre del archivo seleccionado.","title":"core.fileChoose"},{"location":"archivo_core/#coreformulacheck","text":"core. formulaCheck (filename: str ) Verifica que el archivo Excel a cargar no tenga f\u00f3rmulas en alguna de sus celdas. Par\u00e1metros: filename : Nombre del archivo Excel seleccionado.","title":"core.formulaCheck"},{"location":"archivo_core/#corehiddensheetscheck","text":"core. hiddenSheetsCheck (filename: str ) Verifica que el archivo Excel a cargar no tenga hojas ocultas. Par\u00e1metros: filename : Nombre del archivo Excel seleccionado.","title":"core.hiddenSheetsCheck"},{"location":"archivo_core/#coreis_valid_time","text":"core. is_valid_time (value: any ) Verifica que el valor sea de tipo datetime.time . Par\u00e1metros: value : Valor a analizar.","title":"core.is_valid_time"},{"location":"archivo_core/#coretimeformatcheck","text":"core. timeFormatCheck (filename: str ) Verifica que las marcas horarias en el archivo Excel sean de tipo datetime.time . Par\u00e1metros: filename : Nombre del archivo Excel seleccionado.","title":"core.timeFormatCheck"},{"location":"archivo_core/#corechunker","text":"core. chunker (seq: list , size: int ) Genera una estructura auxiliar de datos para recorrer una lista seleccionando size elementos. Par\u00e1metros: seq : La lista de valores a intervenir. size : Cantidad de elementos a agrupar de la lista.","title":"core.chunker"},{"location":"archivo_core/#corechunker_df","text":"core. chunker_df (seq: pandas.DataFrame , size: int ) Genera una estructura auxiliar de datos para recorrer un dataframe seleccionando size filas. Par\u00e1metros: seq : Dataframe a intervenir. size : Cantidad de filas a agrupar del dataframe.","title":"core.chunker_df"},{"location":"archivo_core/#coreget_second_minimum","text":"core. get_second_minimum (x: list ) Entrega el segundo valor m\u00ednimo (mayor que el m\u00ednimo global) Par\u00e1metros: x : Lista con elementos ordenables.","title":"core.get_second_minimum"},{"location":"archivo_core/#coreconvertir_horario_dia_siguiente","text":"core. convertir_horario_dia_siguiente (hi: timestamp , ht: timestamp ) Retorna los horarios hi y ht (usualmente tomados desde las primera y \u00faltima marca horaria programada como salida) en formato \"DD/MM/YYYY HH:MM:SS\" para realizar operaciones de comparaci\u00f3n en programaci\u00f3n de operaciones. Esta funci\u00f3n permite convertir el mayor horario al d\u00eda siguiente para permitir operaciones de comparaci\u00f3n consistentes. Par\u00e1metros: hi : Marca horaria menor. ht : Marca horaria mayor.","title":"core.convertir_horario_dia_siguiente"},{"location":"archivo_core/#corearreglar_horarios_inicio_fin","text":"core. arreglar_horarios_inicio_fin (first_exp_time: timestamp , second_exp_time: timestamp , last_exp_time: timestamp ) Retorna los horarios de inicio (menor) y de fin (mayor) (usualmente tomados desde las primera y \u00faltima marca horaria programada como salida) en formato \"DD/MM/YYYY HH:MM:SS\" para realizar operaciones de comparaci\u00f3n en programaci\u00f3n de operaciones. Esta funci\u00f3n realiza una estrategia de comparaci\u00f3n en la diferencia entre la primera y la segunda marca horaria del d\u00eda, para estimar correctamente la posici\u00f3n (en d\u00edas) del horario mayor. Par\u00e1metros: first_exp_time : Marca horaria menor. second_exp_time : Marca horaria segunda menor. last_exp_time : Marca horaria mayor.","title":"core.arreglar_horarios_inicio_fin"},{"location":"archivo_core/#coreget_first_and_last_exp","text":"core. get_first_and_last_exp (sub_df: pandas.DataFrame ) Esta funci\u00f3n recibe un subconjunto de filas de la tabla Anexo 4 cargada en el programa y entrega los tiempos de la primera (menor) y \u00faltima (mayor) salida programada. Par\u00e1metros: sub_df : Subconjunto del DataFrame del Anexo 4 cargado.","title":"core.get_first_and_last_exp"},{"location":"archivo_core/#coreget_limits_tramos","text":"core. get_limits_tramos (sub_df: pandas.DataFrame ) Esta funci\u00f3n recibe un subconjunto de filas de la tabla Anexo 4 cargada en el programa y retorna un dataframe con los tiempos de la primera (menor) y \u00faltima (mayor) salida programada, por cada tramo horario definido en un tipo de d\u00eda. Esta funci\u00f3n se aplica en los casos en los que se sabe que el servicio-sentido-tipod\u00eda tiene dos tramos. Par\u00e1metros: sub_df : Subconjunto del DataFrame del Anexo 4 cargado.","title":"core.get_limits_tramos"},{"location":"archivo_core/#corefilter_max_values_dict","text":"core. filter_max_values_dict (dict_obj: dict ) Esta funci\u00f3n recibe un diccionario, el cual tiene valores enteros; y retorna otro diccionario filtrado solo con valores mayores a 3. Par\u00e1metros: dict_obj : Diccionario con valores enteros.","title":"core.filter_max_values_dict"},{"location":"archivo_core/#coredt_time_to_hours","text":"core. dt_time_to_hours (time: datetime.time ) Esta funci\u00f3n recibe una marca horaria y retorna la cantidad de horas de la marca (con decimales) Par\u00e1metros: time : Marca horaria","title":"core.dt_time_to_hours"},{"location":"archivo_core/#corecomp_durac_tolerance","text":"core. comp_durac_tolerance (durac_a3: datetime.time , durac_a4: datetime.time ) Esta funci\u00f3n aplica la regla de tolerancia en la duraci\u00f3n de las expediciones seg\u00fan el Anexo 4, dependiente de la duraci\u00f3n programada seg\u00fan el Anexo 3. Retorna un booleano y los l\u00edmites de tolerancia calculados. Par\u00e1metros: durac_a3 : Duraci\u00f3n en minutos de las expediciones programadas en el servicio-sentido-tipod\u00eda-mediahora. durac_a4 : Duraci\u00f3n en minutos de la expedici\u00f3n programada en el servicio-sentido-tipod\u00eda.","title":"core.comp_durac_tolerance"},{"location":"archivo_core/#corecomp_iprog_tolerance","text":"core. comp_iprog_tolerance (iprog: int , imin: int , imax: int ) Esta funci\u00f3n aplica la regla de tolerancia en los intervalos de salidas del Anexo 4, de acuerdo con la programaci\u00f3n calculada por salidas por media hora seg\u00fan el Anexo 3. Par\u00e1metros: iprog : Intervalo promedio calculado desde Anexo 3 (tiempo/salidas) imin : M\u00ednimo intervalo observado en la programaci\u00f3n de salidas seg\u00fan Anexo 4. imax : M\u00e1ximo intervalo observado en la programaci\u00f3n de salidas seg\u00fan Anexo 4.","title":"core.comp_iprog_tolerance"},{"location":"archivo_core/#corehas_more_than_two_decimals","text":"core. has_more_than_two_decimals (value: float ) Esta funci\u00f3n chequea si un valor tiene m\u00e1s de dos decimales. Retorna True si tiene m\u00e1s de dos decimales, False en caso contrario. Par\u00e1metros: value : Valor a analizar.","title":"core.has_more_than_two_decimals"},{"location":"archivo_core/#corehas_seconds_greater_than_zero","text":"core. has_seconds_greater_than_zero (time_obj: datetime.time ) Esta funci\u00f3n chequea si un horario tiene segundos. Par\u00e1metros: time_obj : Marca horaria a analizar.","title":"core.has_seconds_greater_than_zero"},{"location":"archivo_core/#corecount_zeroes","text":"core. count_zeroes (list_: list ) Esta funci\u00f3n cuenta cu\u00e1ntos ceros hay al inicio y al final de una lista. Retorna las cantidades en una tupla. Par\u00e1metros: list_ : Lista con valores enteros.","title":"core.count_zeroes"},{"location":"archivo_core/#coreasignacion","text":"core. asignacion (salidas_periodo: int , duracion_periodo: int , grad: int , mhvaciasinicio=0: int , mhvaciastermino=0: int ) Esta funci\u00f3n realiza la distribuci\u00f3n de salidas originalmente en un periodo, por cada media hora de operaci\u00f3n del servicio-sentido-tipod\u00eda. Par\u00e1metros: salidas_periodo : Cantidad de salidas asociadas al servicio-sentido-periodo. duracion_periodo : Duracion (en horas) del periodo. grad : Valor que indica si el pr\u00f3ximo periodo aumenta o disminuye salidas. mhvaciasinicio : Cantidad de medias horas sin salidas al inicio del periodo. mhvaciastermino : Cantidad de medias horas sin salidas al final del periodo.","title":"core.asignacion"},{"location":"archivo_core/#coredt_time_to_dt_dt","text":"core. dt_time_to_dt_dt (time: any ) Esta funci\u00f3n recibe una marca horaria y la convierte en objeto datetime.datetime. Par\u00e1metros: time : Marca horaria.","title":"core.dt_time_to_dt_dt"},{"location":"archivo_core/#coreall_to_dt_time","text":"core. all_to_dt_time (dt_time: any ) Esta funci\u00f3n recibe una marca horaria (en cualquier formato) y la convierte en objeto datetime.datetime. Par\u00e1metros: dt_time : Marca horaria.","title":"core.all_to_dt_time"},{"location":"archivo_core/#coredelete_files_in_folder","text":"core. delete_files_in_folder (folder_path: str ) Esta funci\u00f3n recibe la direcci\u00f3n de una carpeta en el ordenador, y elimina todos los archivos en su interior. Par\u00e1metros: folder_path : Direcci\u00f3n de una carpeta particular.","title":"core.delete_files_in_folder"},{"location":"archivo_core/#coreperiodo_inicio","text":"core. periodo_inicio (hora: int , minutos: int ) Esta funci\u00f3n recibe un valor de horas y un valor de minutos, y retorna un objeto de tipo datetime.time aproximado a la media hora anterior de la marca horaria. Par\u00e1metros: hora : Valor de horas. minutos : Valor de minutos.","title":"core.periodo_inicio"},{"location":"archivo_core/#corenew_periodo_inicio","text":"core. new_periodo_inicio (hora: int ) Esta funci\u00f3n recibe un valor de horas, y retorna un objeto de tipo datetime.time aproximado a la hora de la marca horaria. Par\u00e1metros: hora : Valor de horas.","title":"core.new_periodo_inicio"},{"location":"archivo_core/#coreaux_salidas","text":"core. aux_salidas (s_ant: int , s: int , s_sig: int ) Esta funci\u00f3n recibe tres valores de salidas (para tres MH consecutivas) y retorna valores intermedios en funci\u00f3n de ellos. Par\u00e1metros: s_ant : Cantidad de salidas de la MH anterior. s : Cantidad de salidas de la MH actual. s_sig : Cantidad de salidas de la MH siguiente.","title":"core.aux_salidas"},{"location":"archivo_core/#coreclasif_an_frec","text":"core. clasif_an_frec (frec: float ) Esta funci\u00f3n recibe un valor de frecuencias y retorna una clasificaci\u00f3n para el an\u00e1lisis de frecuencias. Par\u00e1metros: frec : Valor real asociado a buses por hora en un periodo.","title":"core.clasif_an_frec"},{"location":"archivo_core/#clase-panelus","text":"","title":"Clase PanelUS"},{"location":"archivo_core/#atributos-iniciales","text":"","title":"Atributos iniciales"},{"location":"archivo_core/#panelusunidad","text":"(type: str , default = '0') Variable que guarda el valor de la unidad de servicio seleccionada por usuario para generar revisiones espec\u00edficas en Panel.","title":"PanelUS.unidad"},{"location":"archivo_core/#panelusanexo1","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n completa del Anexo 1.","title":"PanelUS.anexo1"},{"location":"archivo_core/#panelusanexo1_name","text":"(type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Anexo 1 Nuevo.","title":"PanelUS.anexo1_name"},{"location":"archivo_core/#panelusanexo3","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n completa del Anexo 3 Nuevo.","title":"PanelUS.anexo3"},{"location":"archivo_core/#panelusanexo3_name","text":"(type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Anexo 3 Nuevo.","title":"PanelUS.anexo3_name"},{"location":"archivo_core/#panelusanexo3b","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n completa del Anexo 3 Vigente.","title":"PanelUS.anexo3b"},{"location":"archivo_core/#panelusanexo3b_name","text":"(type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Anexo 3 Vigente.","title":"PanelUS.anexo3b_name"},{"location":"archivo_core/#panelusanexo4","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n completa del Anexo 4 Nuevo.","title":"PanelUS.anexo4"},{"location":"archivo_core/#panelusanexo4_name","text":"(type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Anexo 4 Nuevo.","title":"PanelUS.anexo4_name"},{"location":"archivo_core/#panelusanexo4_solocomerc","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n de salidas comerciales (C01) del Anexo 4 Nuevo.","title":"PanelUS.anexo4_solocomerc"},{"location":"archivo_core/#panelusanexo4_capac","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n de capacidades de buses del Anexo 4 Nuevo.","title":"PanelUS.anexo4_capac"},{"location":"archivo_core/#panelusanexo4b","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n completa del Anexo 4 Vigente.","title":"PanelUS.anexo4b"},{"location":"archivo_core/#panelusanexo4b_name","text":"(type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Anexo 4 Vigente.","title":"PanelUS.anexo4b_name"},{"location":"archivo_core/#panelusanexo4b_solocomerc","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n de salidas comerciales (C01) del Anexo 4 Vigente.","title":"PanelUS.anexo4b_solocomerc"},{"location":"archivo_core/#panelusanexo4b_capac","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n de capacidades de buses del Anexo 4 Vigente.","title":"PanelUS.anexo4b_capac"},{"location":"archivo_core/#panelusconsolidado","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n del Consolidado de Salidas.","title":"PanelUS.consolidado"},{"location":"archivo_core/#panelusconsolidado_name","text":"(type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Consolidado de Salidas.","title":"PanelUS.consolidado_name"},{"location":"archivo_core/#panelusconsolidado_frec","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con informaci\u00f3n de frecuencias, calculadas desde el Consolidado de Salidas.","title":"PanelUS.consolidado_frec"},{"location":"archivo_core/#panelusconsolidado_par","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n del Registro Consolidado de Paradas.","title":"PanelUS.consolidado_par"},{"location":"archivo_core/#panelusconsolidado_par_name","text":"(type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n del Registro Consolidado de Paradas.","title":"PanelUS.consolidado_par_name"},{"location":"archivo_core/#panelusbase_cons","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con la informaci\u00f3n base de Servicios-Sentido en el orden preestablecido hist\u00f3rico de los Consolidados.","title":"PanelUS.base_cons"},{"location":"archivo_core/#panelusbase_cons_name","text":"(type: str , default = 'No cargado') Variable que guarda el nombre del archivo Excel que contiene la informaci\u00f3n base de Servicios-Sentido en el orden preestablecido hist\u00f3rico de los Consolidados.","title":"PanelUS.base_cons_name"},{"location":"archivo_core/#panelusperiodos","text":"(type: pandas.DataFrame , default = Informaci\u00f3n de Periodos*) Variable que guarda la estructura del DataFrame con informaci\u00f3n de periodos seg\u00fan tipo d\u00eda, media hora, duraci\u00f3n de cada periodo y otras columnas que auxilian la tarea de distribuci\u00f3n de salidas asignadas por periodo.","title":"PanelUS.periodos"},{"location":"archivo_core/#panelusperiodos_data","text":"(type: pandas.DataFrame , default = Informaci\u00f3n de Periodos*) Variable que guarda la estructura del DataFrame con informaci\u00f3n de periodos seg\u00fan tipo d\u00eda y media hora. Guarda la estructura original de la tabla anterior, sin las columnas auxiliares del proceso de distribuci\u00f3n de salidas asignadas por periodo","title":"PanelUS.periodos_data"},{"location":"archivo_core/#panelusgradiente","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de tendencias en la asignaci\u00f3n de salidas por periodo en el Consolidado. Por ejemplo, si en el siguiente periodo aumentan o disminuyen las salidas.","title":"PanelUS.gradiente"},{"location":"archivo_core/#panelusanexo3_w_inconsist","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante del an\u00e1lisis de consistencia del Anexo 3 Nuevo.","title":"PanelUS.anexo3_w_inconsist"},{"location":"archivo_core/#panelusanexo4_w_inconsist","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante del an\u00e1lisis de consistencia del Anexo 4 Nuevo.","title":"PanelUS.anexo4_w_inconsist"},{"location":"archivo_core/#panelusvalidacion_a4_a1","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante de la comparaci\u00f3n de horarios de salida (A4) y operaci\u00f3n (A1).","title":"PanelUS.validacion_a4_a1"},{"location":"archivo_core/#panelusvalidacion_a4_a3","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante de la comparaci\u00f3n de par\u00e1metros de operaci\u00f3n definidos en Anexo 3 y Anexo 4.","title":"PanelUS.validacion_a4_a3"},{"location":"archivo_core/#panelusvalidacion_a4_a3_x_mha","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante de la comparaci\u00f3n de par\u00e1metros de operaci\u00f3n definidos en Anexo 3 y Anexo 4, por media hora agrupada seg\u00fan Anexo 3.","title":"PanelUS.validacion_a4_a3_x_mha"},{"location":"archivo_core/#panelusresult_comp_a3v_a3n","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante de la comparaci\u00f3n de par\u00e1metros de operaci\u00f3n definidos en Anexo 3 Nuevo y Anexo 3 Vigente.","title":"PanelUS.result_comp_a3v_a3n"},{"location":"archivo_core/#panelusvalidacion_a4_interv_mha_trusted","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame resultante de la validaci\u00f3n de intervalos programados de salidas en el Anexo 4, considerando las agrupaciones del Anexo 3.","title":"PanelUS.validacion_a4_interv_mha_trusted"},{"location":"archivo_core/#panelusanexo1_new","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con la informaci\u00f3n formateada del Anexo 1, construido a partir del Anexo 4.","title":"PanelUS.anexo1_new"},{"location":"archivo_core/#panelusa3_from_a4_final","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con la informaci\u00f3n formateada del Anexo 3, construido a partir del Anexo 4.","title":"PanelUS.a3_from_a4_final"},{"location":"archivo_core/#panelusa4_from_a3","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con la informaci\u00f3n formateada del Anexo 4, construido a partir del Anexo 3.","title":"PanelUS.a4_from_a3"},{"location":"archivo_core/#panelusanexo3_ns_w_base","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n formateada del Anexo 3, construido a partir del Consolidado de Salidas (distribuidas).","title":"PanelUS.anexo3_ns_w_base"},{"location":"archivo_core/#panelusperfil_flota","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de cantidad de flota operando por cada media hora en una unidad.","title":"PanelUS.perfil_flota"},{"location":"archivo_core/#paneluscons_a3_frec","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de frecuencias consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros.","title":"PanelUS.cons_a3_frec"},{"location":"archivo_core/#paneluscons_a3_cap","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de capacidades consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros.","title":"PanelUS.cons_a3_cap"},{"location":"archivo_core/#paneluscons_a3_sal","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de salidas consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros.","title":"PanelUS.cons_a3_sal"},{"location":"archivo_core/#paneluscons_a3_vel","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de velocidades promedio consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros.","title":"PanelUS.cons_a3_vel"},{"location":"archivo_core/#paneluscons_a3_dist","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de distancias totales consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros.","title":"PanelUS.cons_a3_dist"},{"location":"archivo_core/#paneluscons_a3_dist_int","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de distancias totales consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros.","title":"PanelUS.cons_a3_dist_int"},{"location":"archivo_core/#paneluscons_a3_fmax","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de flota m\u00e1xima consolidada por periodo, para preparar el archivo Consolidado de Par\u00e1metros.","title":"PanelUS.cons_a3_fmax"},{"location":"archivo_core/#panelusa3_cons_mh","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n consolidada de frecuencias por media hora.","title":"PanelUS.a3_cons_mh"},{"location":"archivo_core/#panelusa3_lab_n","text":"(type: bool , default = False) Variable booleana que identifica si hay d\u00edas laborales en el Anexo 3 Nuevo.","title":"PanelUS.a3_lab_n"},{"location":"archivo_core/#panelusa3_sab_n","text":"(type: bool , default = False) Variable booleana que identifica si hay d\u00edas s\u00e1bado en el Anexo 3 Nuevo.","title":"PanelUS.a3_sab_n"},{"location":"archivo_core/#panelusa3_dom_n","text":"(type: bool , default = False) Variable booleana que identifica si hay d\u00edas domingo en el Anexo 3 Nuevo.","title":"PanelUS.a3_dom_n"},{"location":"archivo_core/#panelusa3_lab_v","text":"(type: bool , default = False) Variable booleana que identifica si hay d\u00edas laborales en el Anexo 3 Vigente.","title":"PanelUS.a3_lab_v"},{"location":"archivo_core/#panelusa3_sab_v","text":"(type: bool , default = False) Variable booleana que identifica si hay d\u00edas s\u00e1bado en el Anexo 3 Vigente.","title":"PanelUS.a3_sab_v"},{"location":"archivo_core/#panelusa3_dom_v","text":"(type: bool , default = False) Variable booleana que identifica si hay d\u00edas domingo en el Anexo 3 Vigente.","title":"PanelUS.a3_dom_v"},{"location":"archivo_core/#panelusdf_km","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con informaci\u00f3n de kil\u00f3metros totales por tipo d\u00eda.","title":"PanelUS.df_km"},{"location":"archivo_core/#paneluscons_interv","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con informaci\u00f3n de intervalo promedio de salidas por periodo (formato Consolidado).","title":"PanelUS.cons_interv"},{"location":"archivo_core/#paneluscuenta_ss","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n de cantidad de Servicios-Sentido por unidad y por periodo que se agregan por cada categor\u00eda de frecuencias.","title":"PanelUS.cuenta_ss"},{"location":"archivo_core/#panelusperc_ss_nivel_frec","text":"(type: pandas.DataFrame , default = None) Variable que guarda la estructura del DataFrame con informaci\u00f3n final de proporciones (porcentaje) de Servicios-Sentido por unidad y por periodo que se agregan por cada categor\u00eda de frecuencias.","title":"PanelUS.perc_ss_nivel_frec"},{"location":"archivo_core/#panelusrevision_biportal","text":"(type: pandas.DataFrame , default = pandas.DataFrame()) Variable que guarda la estructura del DataFrame con informaci\u00f3n de salidas programadas en Anexo 4 asignadas err\u00f3neamente a buses que no pueden operar en servicios que atienden paraderos de puerta izquierda.","title":"PanelUS.revision_biportal"},{"location":"archivo_core/#funciones-metodos","text":"","title":"Funciones (m\u00e9todos)"},{"location":"archivo_core/#panelusreset","text":"PanelUS . reset () Reinicia todos los atributos iniciales del Panel.","title":"PanelUS.reset"},{"location":"archivo_core/#panelusconsulta_de_salidas","text":"PanelUS . consulta_de_salidas (servicio: _str , sentido: str , periodo: str ) Lee el Consolidado de Salidas y retorna el n\u00famero de salidas efectuadas durante el periodo seg\u00fan el consolidado. Si no encuentra el Servicio-Sentido-Periodo retorna un valor NaN. Par\u00e1metros servicio : Identificador del servicio (C\u00f3digo TS) sentido : Identificador del sentido (\"Ida\", \"Ret\") periodo : Identificador del periodo (Abreviatura)","title":"PanelUS.consulta_de_salidas"},{"location":"archivo_core/#panelusconsulta_de_gradiente","text":"PanelUS . consulta_de_gradiente (servicio: _str , sentido: str , periodo: str ) Lee el Consolidado de Salidas y retorna el valor del gradiente en el periodo seg\u00fan el consolidado-gradiente. Si no encuentra el Servicio-Sentido-Periodo retorna un valor NaN. Par\u00e1metros servicio : Identificador del servicio (C\u00f3digo TS) sentido : Identificador del sentido (\"Ida\", \"Ret\") periodo : Identificador del periodo (Abreviatura)","title":"PanelUS.consulta_de_gradiente"},{"location":"archivo_core/#panelussave_all_anexos","text":"PanelUS ._ save_all_anexos () Guarda todos los archivos cargados en el Panel, en formato encriptado, para permitir su recarga al reiniciar el programa.","title":"PanelUS.save_all_anexos"},{"location":"archivo_core/#panelusload_all_anexos","text":"PanelUS . load_all_anexos (files_in_memory: _list ) Carga todos los archivos guardados en la memoria del Panel. Par\u00e1metros files_in_memory : Lista con los nombres de los archivos guardados en la memoria del panel.","title":"PanelUS.load_all_anexos"},{"location":"archivo_core/#panelusclear_all_anexos","text":"PanelUS . clear_all_anexos (path : str ) Borra todos los archivos guardados en la memoria del Panel. Par\u00e1metros path_ : Nombre de la direcci\u00f3n de la carpeta de memoria.","title":"PanelUS.clear_all_anexos"},{"location":"archivo_core/#panelusload_a1","text":"PanelUS ._ load_A1 () Proceso que carga un archivo Excel Anexo 1 Nuevo. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales.","title":"PanelUS.load_A1"},{"location":"archivo_core/#panelusload_a3","text":"PanelUS ._ load_A3 () Proceso que carga un archivo Excel Anexo 3 Nuevo. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales.","title":"PanelUS.load_A3"},{"location":"archivo_core/#panelusload_a4","text":"PanelUS ._ load_A4 () Proceso que carga un archivo Excel Anexo 4 Nuevo. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas, hojas ocultas o las marcas temporales sin el formato adecuado. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales. Desde el Anexo 4 se obtienen la programaci\u00f3n completa de salidas, la programaci\u00f3n de salidas comerciales, y las capacidades de buses programados.","title":"PanelUS.load_A4"},{"location":"archivo_core/#panelusload_a1b","text":"PanelUS ._ load_A1b () Proceso que carga un archivo Excel Anexo 1 Vigente. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales.","title":"PanelUS.load_A1b"},{"location":"archivo_core/#panelusload_a3b","text":"PanelUS ._ load_A3b () Proceso que carga un archivo Excel Anexo 3 Vigente. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales.","title":"PanelUS.load_A3b"},{"location":"archivo_core/#panelusload_a4b","text":"PanelUS ._ load_A4b () Proceso que carga un archivo Excel Anexo 4 Vigente. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales. Desde el Anexo 4 se obtienen la programaci\u00f3n completa de salidas, la programaci\u00f3n de salidas comerciales, y las capacidades de buses programados.","title":"PanelUS.load_A4b"},{"location":"archivo_core/#panelusload_cons","text":"PanelUS ._ load_cons () Proceso que carga un archivo Consolidado de Salidas. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales.","title":"PanelUS.load_cons"},{"location":"archivo_core/#panelusconsolidado_loader","text":"PanelUS ._ consolidado_loader () Procesamiento del archivo Consolidado de Salidas, para generar estructuras de datos auxiliares para la distribuci\u00f3n de salidas por media hora y el consolidado de frecuencias. El proceso es llamado por al interior de load_cons, as\u00ed tambi\u00e9n cuando se realiza una carga del consolidado desde la memoria.","title":"PanelUS.consolidado_loader"},{"location":"archivo_core/#panelusload_conspar","text":"PanelUS ._ load_conspar () Proceso que carga un archivo Consolidado de Paradas. El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales.","title":"PanelUS.load_conspar"},{"location":"archivo_core/#panelusload_base_cons","text":"PanelUS ._ load_base_cons () Proceso que carga un archivo Base de Consolidado (para obtener el orden de servicios del archivo Consolidado). El proceso es llamado por una funci\u00f3n de la interfaz, y permite la interacci\u00f3n en los casos que no se seleccione ning\u00fan archivo, as\u00ed tambi\u00e9n gatilla variables booleanas para alertar cuando el archivo tiene f\u00f3rmulas u hojas ocultas. Tambi\u00e9n est\u00e1 dise\u00f1ado para renombrar las columnas, y as\u00ed no tener conflictos por alteraciones o typos en los archivos originales.","title":"PanelUS.load_base_cons"},{"location":"archivo_core/#paneluscheck_param_a3","text":"PanelUS ._ check_param_a3 () Proceso que eval\u00faa la consistencia interna del Anexo 3. El proceso considera: Evaluar si las distancias est\u00e1n truncadas hasta dos decimales Evaluar si las velocidades est\u00e1n truncadas hasta dos decimales Evaluar si las marcas horarias en la columna MH no tienen segundos Evaluar si la unidad de servicio de la columna es equivalente a la seleccionada en el programa Evaluar si no existen servicios inyecci\u00f3n en el archivo El proceso guarda en una variable los casos en los que la evaluaci\u00f3n falla.","title":"PanelUS.check_param_a3"},{"location":"archivo_core/#paneluscheck_param_a4","text":"PanelUS ._ check_param_a4 () Proceso que eval\u00faa la consistencia interna del Anexo 4. El proceso considera: Evaluar si las marcas horarias en las columnas HORA_INICIO, PERIODO_INICIO, HORA_FIN, PERIODO_FIN y DURACION no tienen segundos Evaluar si las distancias est\u00e1n truncadas hasta dos decimales Evaluar si no existen datos incompletos (NaN) Evaluar si la unidad de servicio de la columna es equivalente a la seleccionada en el programa El proceso guarda en una variable los casos en los que la evaluaci\u00f3n falla.","title":"PanelUS.check_param_a4"},{"location":"archivo_core/#paneluscompare_a3v_a3n","text":"PanelUS ._ compare_a3v_a3n () Proceso que compara los par\u00e1metros de operaci\u00f3n entre el Anexo 3 Vigente y el Anexo 3 Nuevo. La comparaci\u00f3n de par\u00e1metros se realiza a nivel de Salidas, Velocidad, Distancia Base, Distancia Integrada, Indicador de Tiempo de Espera y Agrupaci\u00f3n de MH.","title":"PanelUS.compare_a3v_a3n"},{"location":"archivo_core/#paneluscompare_a1_a4","text":"PanelUS ._ compare_a1_a4 () Proceso que compara los horarios de operaci\u00f3n seg\u00fan el Anexo 1, con las primera y \u00faltima salidas del Anexo 4, por cada Servicio-Sentido-TipoD\u00eda. Para realizar el proceso se debe obtener las primera y \u00faltima salida del Anexo 4 (a partir del proceso \"genera_a1_from_a4\") y realizar la comparaci\u00f3n con el Anexo 1.","title":"PanelUS.compare_a1_a4"},{"location":"archivo_core/#panelusgenera_a1_from_a4","text":"PanelUS ._ genera_a1_from_a4 () Proceso que genera una estructura como la hoja de Horarios de Operaci\u00f3n del Anexo 1, identificando de forma correcta los casos en los que existe m\u00e1s de un tramo de operaci\u00f3n (y por tanto m\u00e1s de un horario de inicio y m\u00e1s de un horario de fin). Para realizar esto, toma como supuesto que [no existe una diferencia menor a 3 horas entre el fin de un tramo y el inicio de otro] , por lo que se centra en la identificaci\u00f3n de gaps de tiempo superiores a 3 horas en los tiempos de salida de un tipo d\u00eda para identificar m\u00e1s de un tramo, o si los inicios y fin se encuentran muy cercanos durante el espacio de la madrugada. El proceso guarda en una variable los casos en los que los horarios no coinciden.","title":"PanelUS.genera_a1_from_a4"},{"location":"archivo_core/#paneluscompare_a3_a4","text":"PanelUS ._ compare_a3_a4 () Proceso que compara los par\u00e1metros de operaci\u00f3n seg\u00fan el Anexo 3, con los par\u00e1metros que son posibles de estimar a partir de la programaci\u00f3n de salidas del Anexo 4, por cada Servicio-Sentido-TipoD\u00eda. Para realizar el proceso se procesa el anexo 4, obteniendo las medidas o par\u00e1metros de operaci\u00f3n seg\u00fan las caracter\u00edsticas de la programaci\u00f3n de salidas, consolidando la informaci\u00f3n por media hora, de forma de poder comparar directamente la informaci\u00f3n del Anexo 3. El proceso guarda en una variable los casos en los que los par\u00e1metros no coinciden.","title":"PanelUS.compare_a3_a4"},{"location":"archivo_core/#paneluscheck_intervalos_a3_trusted","text":"PanelUS ._ check_intervalos_a3_trusted () Proceso que eval\u00faa si los intervalos entre salidas programadas seg\u00fan el Anexo 4, cumplen con las restricciones de programaci\u00f3n seg\u00fan el intervalo programado del Anexo 3 (tiempo/salidas). El proceso se genera de acuerdo con la regla se\u00f1alada en el Manual de Programaci\u00f3n US. El proceso guarda en una variable los casos en los que el intervalo programado en el Anexo 4 no cumple la regla del Manual.","title":"PanelUS.check_intervalos_a3_trusted"},{"location":"archivo_core/#panelusa3_newslds_w_base","text":"PanelUS ._ a3_newslds_w_base () Proceso que genera una estructura de datos con informaci\u00f3n del Anexo 3 a partir de la informaci\u00f3n de salidas del Consolidado, y los horarios de operaci\u00f3n del Anexo 1. El proceso permite generar archivos de par\u00e1metros de operaci\u00f3n desde el Consolidado, para los fines que se estimen necesarios. El proceso est\u00e1 basado en una rutina de asignaci\u00f3n de salidas por media hora, y adem\u00e1s contempla la generaci\u00f3n \u00f3ptima de una columna con las agrupaciones de media hora. Sin embargo, el proceso est\u00e1 dise\u00f1ado para introducir las modificaciones de salidas y agrupaciones solo en los periodos en los que hubo cambios (de acuerdo con el Consolidado de Salidas).","title":"PanelUS.a3_newslds_w_base"},{"location":"archivo_core/#panelusgenera_a4_from_a3","text":"PanelUS ._ genera_a4_from_a3 () Proceso que genera una estructura de datos con informaci\u00f3n del Anexo 4 (Tabla Horaria Simplificada) a partir de la informaci\u00f3n de par\u00e1metros de operaci\u00f3n seg\u00fan el Anexo 3. El proceso est\u00e1 basado en una rutina de programaci\u00f3n de salidas considerando las agrupaciones de MH y los horarios de operaci\u00f3n seg\u00fan el Anexo 1.","title":"PanelUS.genera_a4_from_a3"},{"location":"archivo_core/#panelusgenera_a3_from_a4","text":"PanelUS ._ genera_a3_from_a4 () Proceso que genera una estructura de datos con informaci\u00f3n del Anexo 3 a partir de la informaci\u00f3n de salidas programadas del Anexo 4. El proceso consolida por media hora la informaci\u00f3n programada (similar a lo que se procesa en \"compare_a3_a4\").","title":"PanelUS.genera_a3_from_a4"},{"location":"archivo_core/#panelusgenera_cons_frec","text":"PanelUS ._ genera_cons_frec () Proceso que genera una estructura de datos con informaci\u00f3n de frecuencias por periodo (similar al Consolidado de Salidas).","title":"PanelUS.genera_cons_frec"},{"location":"archivo_core/#paneluscalc_perfil_flota","text":"PanelUS ._ calc_perfil_flota () Proceso que genera una estructura de datos con informaci\u00f3n de flota operativa (cantidad de buses) por media hora en la unidad de servicio.","title":"PanelUS.calc_perfil_flota"},{"location":"archivo_core/#paneluscons_periodo_us","text":"PanelUS ._ cons_periodo_us () Proceso que genera una estructura de datos con informaci\u00f3n consolidada de par\u00e1metros de operaci\u00f3n por periodo.","title":"PanelUS.cons_periodo_us"},{"location":"archivo_core/#paneluscons_mh_us","text":"PanelUS ._ cons_mh_us () Proceso que genera una estructura de datos con informaci\u00f3n consolidada de frecuencias por media hora.","title":"PanelUS.cons_mh_us"},{"location":"archivo_core/#panelusreagrupa_a3","text":"PanelUS ._ reagrupa_a3 () Proceso que genera una nueva columna de agrupaci\u00f3n de medias horas en el Anexo 3 Nuevo. Este proceso se basa en una rutina de agrupaci\u00f3n de medias horas con reglas que permitan una distribuci\u00f3n suave de las salidas en cada media hora, y evitar una programaci\u00f3n inequitativa de salidas.","title":"PanelUS.reagrupa_a3"},{"location":"archivo_core/#panelusconteo_km","text":"PanelUS ._ conteo_km () Proceso que genera una nueva estructura de datos con el resumen de los kil\u00f3metros programados de la unidad, por tipo de d\u00eda, a partir de cada Anexo 3 (Nuevo y Vigente) comparandolos entre s\u00ed.","title":"PanelUS.conteo_km"},{"location":"archivo_core/#panelusvalid_cons_w_intervs","text":"PanelUS ._ valid_cons_w_intervs () Proceso que genera una nueva estructura de datos con el c\u00e1lculo de intervalos de salida programada, a partir de las salidas totales por periodo del Consolidado de Salidas. Esta herramienta permite alertar los casos en que la programaci\u00f3n de la salidas tiene tal nivel que puede producir intervalos de salida fuera del est\u00e1ndar (m\u00e1ximo 30 minutos en servicios regulares).","title":"PanelUS.valid_cons_w_intervs"},{"location":"archivo_core/#panelusgenerar_bases_analys_frec_cons","text":"PanelUS ._ generar_bases_analys_frec_cons () Proceso que genera una nueva estructura de datos analizando las frecuencias programadas promedio por periodo y SS, permitiendo su clasificaci\u00f3n y revisi\u00f3n.","title":"PanelUS.generar_bases_analys_frec_cons"},{"location":"archivo_core/#panelusrevisar_a4_buses_biportal","text":"PanelUS ._ revisar_a4_buses_biportal () Proceso que revisa que las salidas programadas en Anexo 4 en servicios que sirven en paradas de peurta izquierda, cuenten solo con buses de puerta izquierda programados.","title":"PanelUS.revisar_a4_buses_biportal"},{"location":"archivo_panel_po_us/","text":"Front End (Interfaz) Paquetes tkinter - Generaci\u00f3n de interfaces. PIL (pillow) - Gesti\u00f3n de im\u00e1genes. threading - Capacidad de ejecuci\u00f3n de acciones en paralelo. openpyxl - Tratamiento de archivos Excel. xlsxwriter - Generador de archivos Excel. tooltip - Creaci\u00f3n y visualizaci\u00f3n de mensajes 'on-cursor'. pandastable - Creaci\u00f3n y visualizaci\u00f3n de Pandas DataFrames en tkinter. warnings - Gesti\u00f3n de mensajes de advertencia. shutil - Tratamiento de archivos Excel. matplotlib - Generaci\u00f3n de gr\u00e1ficos 2D. core - Funcionamiento interno de Panel PO. Funciones nativas en Archivo 'panel_po_us.py' panel_po_us . pop_up_savior panel_po_us. pop_up_savior (df: _pandas.DataFrame , tipo_archivo: str ) Funci\u00f3n que permite exportar un DataFrame en un archivo Excel, con un nombre particular, unidad revisada, fecha y hora de revisi\u00f3n. Par\u00e1metros: df : DataFrame de Pandas a exportar tipo_archivo : Nombre que se le desea otorgar al archivo Excel panel_po_us . pop_up_savior_png panel_po_us. pop_up_savior_png (figure: _matplotlib.Figure , tipo_archivo: str ) Funci\u00f3n que permite exportar un gr\u00e1fico en un archivo PNG, con un nombre particular, unidad revisada, fecha y hora de revisi\u00f3n. Par\u00e1metros: figure : Figura de Matplotlib a exportar tipo_archivo : Nombre que se le desea otorgar al archivo panel_po_us . filter_df_show panel_po_us. filter_df_show (table: _pandastable.Table , df: pandas.DataFrame , n_col: str ) Funci\u00f3n que se utiliza en ventanas emergentes; permite filtrar las tablas, mostrando las filas con problemas seg\u00fan la columna que se utilice para el filtro. Par\u00e1metros: table : Objeto Table asociado a un DataFrame df : DataFrame de Pandas n_col : Nombre de la columna a filtrar panel_po_us . filter_df_show_2_tipodia panel_po_us. filter_df_show_2_tipodia (table: _pandastable.Table , df: pandas.DataFrame , td: str ) Funci\u00f3n que se utiliza en ventanas emergentes; permite filtrar las tablas por tipo de d\u00eda. Par\u00e1metros: table : Objeto Table asociado a un DataFrame df : DataFrame de Pandas td : Nombre del tipo de d\u00eda que se desea filtrar panel_po_us . change_df_view panel_po_us. change_df_view (table: _pandastable.Table , df: pandas.DataFrame , mha: bool ) Funci\u00f3n que se utiliza en ventanas emergentes de comparaci\u00f3n de Anexo 3 y Anexo 4; permite cambiar la vista y botones de la vista para observar seg\u00fan MH o Agrupaci\u00f3n de MH. Par\u00e1metros: table : Objeto Table asociado a un DataFrame df : DataFrame de Pandas mha : Variable booleana que permite el cambio de visa en botones de filtro de la ventana emergente panel_po_us . check_params_a3 panel_po_us._ check_params_a3 () Funci\u00f3n que gatilla la revisi\u00f3n de consistencia interna en par\u00e1metros del Anexo 3. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que el archivo es consistente, o una tabla con las filas del Anexo 3 que presentan inconsistencia. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue. panel_po_us . check_params_a4 panel_po_us._ check_params_a4 () Funci\u00f3n que gatilla la revisi\u00f3n de consistencia interna en par\u00e1metros del Anexo 4. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 4 Nuevo cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que el archivo es consistente, o una tabla con las filas del Anexo 4 que presentan inconsistencia. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue. panel_po_us . comp_a3v_a3n_panel panel_po_us._ comp_a3v_a3n_panel () Funci\u00f3n que gatilla la revisi\u00f3n comparativa entre par\u00e1metros del Anexo 3 Nuevo y el Vigente. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado y un Anexo 3 Vigente cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que ambos archivos son consistentes, o una tabla comparativa con los par\u00e1metros que no coinciden. Tambi\u00e9n se presentan algunos botones para filtrar la informaci\u00f3n de la tabla por tipo de d\u00eda, o par\u00e1metro de comparaci\u00f3n. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue. panel_po_us . comp_time_a1_a4 panel_po_us._ comp_time_a1_a4 () Funci\u00f3n que gatilla la revisi\u00f3n comparativa entre horarios de operaci\u00f3n seg\u00fan el Anexo 1 y la programaci\u00f3n de primera y \u00faltima salida del d\u00eda seg\u00fan Anexo 4. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 1 Nuevo cargado y un Anexo 4 Nuevo cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que ambos archivos son consistentes, o una tabla comparativa con los par\u00e1metros que no coinciden. Tambi\u00e9n se presentan algunos botones para filtrar la informaci\u00f3n de la tabla por tipo de d\u00eda, o par\u00e1metro de comparaci\u00f3n. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue. panel_po_us . comp_param_a3_a4 panel_po_us._ comp_param_a3_a4 () Funci\u00f3n que gatilla la revisi\u00f3n comparativa entre par\u00e1metros de operaci\u00f3n seg\u00fan el Anexo 3 y el Anexo 4. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 1 Nuevo cargado y un Anexo 4 Nuevo cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que ambos archivos son consistentes, o una tabla comparativa con los par\u00e1metros que no coinciden. Tambi\u00e9n se presentan algunos botones para filtrar la informaci\u00f3n de la tabla por tipo de d\u00eda, o par\u00e1metro de comparaci\u00f3n. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue. Para esta funci\u00f3n se ha programado una forma de cambiar todo el men\u00fa de filtros, ya que la informaci\u00f3n puede compararse a nivel de media hora, o bien a nivel de agrupaci\u00f3n de medias horas. panel_po_us . check_intervalos_a4 panel_po_us._ check_intervalos_a4 () Funci\u00f3n que gatilla la revisi\u00f3n de consistencia en los intervalos entre salidas programadas del Anexo 4 Nuevo, considerando la agrupaci\u00f3n de medias horas que se publica en el Anexo 3 Nuevo. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado y un Anexo 4 Nuevo cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que los intervalos cumplen las reglas de programaci\u00f3n, o una tabla comparativa con los par\u00e1metros que no cumplen. Tambi\u00e9n se presentan algunos botones para filtrar la informaci\u00f3n de la tabla por tipo de d\u00eda. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue. panel_po_us . save_a1_from_a4 panel_po_us._ save_a1_from_a4 () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Anexo 1 a partir de Tabla Horaria Anexo 4. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 4 Nuevo cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo. panel_po_us . save_a3_from_a4 panel_po_us._ save_a3_from_a4 () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Anexo 3 a partir de Tabla Horaria Anexo 4. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 4 Nuevo cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo. panel_po_us . save_a4_from_a3 panel_po_us._ save_a4_from_a3 () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Tabla Horaria Anexo 4 a partir de un Anexo 3 Nuevo cargado. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo. panel_po_us . save_a3_ns_w_base panel_po_us._ save_a3_ns_w_base () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Anexo 3 a partir de un Consolidado de Salidas y un Anexo 1 (para vigencia de servicios). La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 1 Nuevo cargado y un Consolidado de Salidas cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo. panel_po_us . calc_perfil_flota panel_po_us._ calc_perfil_flota () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Perfil de Flota a partir de un Anexo 4 Nuevo. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 4 Nuevo cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo. panel_po_us . genera_cons_mh_us panel_po_us._ genera_cons_mh_us () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Consolidado Frecuencias MH a partir de un Anexo 3 Nuevo y un archivo Base Consolidado. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado y un Base Consolidado cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo. panel_po_us . genera_cons_periodo_us panel_po_us._ genera_cons_periodo_us () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Consolidado de Par\u00e1metros a partir de un Anexo 3 Nuevo y un archivo Base Consolidado. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado y un Base Consolidado cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo. panel_po_us . save_a3_regroup panel_po_us._ save_a3_regroup () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Anexo 3 con agrupaci\u00f3n de MH \u00f3ptima modificada, a partir de un Anexo 3 Nuevo. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo. panel_po_us . vis_load_a1 panel_po_us._ vis_load_a1 () Funci\u00f3n que gatilla la carga/lectura de archivo Anexo 1 Nuevo. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n. panel_po_us . vis_load_a3 panel_po_us._ vis_load_a3 () Funci\u00f3n que gatilla la carga/lectura de archivo Anexo 3 Nuevo. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n. panel_po_us . vis_load_a4 panel_po_us._ vis_load_a4 () Funci\u00f3n que gatilla la carga/lectura de archivo Anexo 4 Nuevo. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n. panel_po_us . vis_load_a3b panel_po_us._ vis_load_a3b () Funci\u00f3n que gatilla la carga/lectura de archivo Anexo 3 Vigente. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n. panel_po_us . vis_load_a4b panel_po_us._ vis_load_a4b () Funci\u00f3n que gatilla la carga/lectura de archivo Anexo 4 Vigente. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n. panel_po_us . vis_load_base_cons panel_po_us._ vis_load_base_cons () Funci\u00f3n que gatilla la carga/lectura de archivo Base Consolidado. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n. panel_po_us . vis_load_cons panel_po_us._ vis_load_cons () Funci\u00f3n que gatilla la carga/lectura de archivo Consolidado de Salidas. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n. panel_po_us . vis_load_conspar panel_po_us._ vis_load_conspar () Funci\u00f3n que gatilla la carga/lectura de archivo Consolidado de Paradas. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n. panel_po_us . selection_changed_main panel_po_us. selection_changed_main (event: _None ) Funci\u00f3n que regula la selecci\u00f3n de unidad de servicio para la revisi\u00f3n de archivos. De esta forma, se puede filtrar la informaci\u00f3n de servicios de la unidad. panel_po_us . save_all_anexos panel_po_us._ save_all_anexos () Funci\u00f3n que gatilla el guardado de los archivos cargados en el panel, en el directorio de memoria. La funci\u00f3n llama al proceso interno y al final de su ejecuci\u00f3n entrega un mensaje de \u00e9xito. panel_po_us . reset_button panel_po_us. reset_button (but: _tkinter.Button ) Funci\u00f3n que devuelve el estado del bot\u00f3n a su formato inicial. panel_po_us . button_loading panel_po_us. button_loading (but: _tkinter.Button ) Funci\u00f3n que cambia el estado del bot\u00f3n al formato definido cuando el bot\u00f3n ha sido accionado y se est\u00e1 realizando el proceso asociado (bot\u00f3n amarillo). panel_po_us . button_loaded panel_po_us. button_loaded (but: _tkinter.Button ) Funci\u00f3n que cambia el estado del bot\u00f3n al formato definido cuando el bot\u00f3n ha sido accionado y el proceso asociado ya ha terminado (bot\u00f3n verde). panel_po_us . load_all_anexos panel_po_us._ load_all_anexos () Funci\u00f3n que gatilla la recarga, al panel, de los archivos guardados en el directorio de memoria. La funci\u00f3n llama al proceso interno y al final de su ejecuci\u00f3n entrega un mensaje de \u00e9xito. panel_po_us . clear_all_anexos panel_po_us._ clear_all_anexos () Funci\u00f3n que gatilla la eliminaci\u00f3n de los archivos guardados en el directorio de memoria y cargados en el panel. La funci\u00f3n llama al proceso interno y al final de su ejecuci\u00f3n entrega un mensaje de \u00e9xito. panel_po_us . valid_cons_vis panel_po_us._ valid_cons_vis () Funci\u00f3n que gatilla la generaci\u00f3n de una estructura de datos similar al Consolidado de Periodos, pero con informaci\u00f3n de intervalos promedio entre salidas programadas, a partir de un Consolidado de Salidas y un Anexo 1 Nuevo. La funci\u00f3n llama al proceso interno y al final de su ejecuci\u00f3n abre una ventana emergente en la que se visualiza la estructura de datos, con los intervalos mayores a 30 resaltados en rojo. panel_po_us . analisis_frecuencias panel_po_us._ analisis_frecuencias () Funci\u00f3n que gatilla la generaci\u00f3n de una estructura de datos y un gr\u00e1fico para el an\u00e1lisis de consistencia en salidas programadas (a trav\u00e9s de la frecuencia programada), a partir de un consolidado de salidas o un Anexo 3. La funci\u00f3n llama al proceso interno y al final de su ejecuci\u00f3n abre una ventana emergente en la que se visualiza el gr\u00e1fico y un bot\u00f3n para descargar la estructura de datos en un archivo Excel. panel_po_us . revision_biportales_a4 panel_po_us._ revision_biportales_a4 () Funci\u00f3n que gatilla la revisi\u00f3n de que se asignen buses biportales (en programaci\u00f3n de salidas A4) a servicios que operen en paraderos de puerta izquierda. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 4 Nuevo cargado y un Consolidado de Paradas cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que el archivo Anexo 4 est\u00e1 correcto, o una tabla con las filas del Anexo 4 que presentan tienen problemas con la asignaci\u00f3n de tipo de bus. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue. Variables declaradas Colores HEX Se declaran valores HEX para los colores a utilizar en el panel. rojo = '#C00000' blanco = '#FFFFFF' gris = '#730202' clickeado = '#00A15A' negro = '#000000' loading = '#FFD700' azul = '#003399' celeste = '#3366CC' azul_deep = '#000033' Declaraci\u00f3n objeto Panel Se declara un objeto de la clase PanelUS() para operar el programa internamente ( backend ). panel_core = PanelUS() Declaraci\u00f3n objeto Interfaz Se declara un objeto de la clase tkinter.Tk() que servir\u00e1 como la ventana principal de la interfaz ( frontend ). mainMenu = tk.Tk() mainMenu.title('Panel PO US') mainMenu.state(\"zoomed\") mainMenu['background'] = blanco Declaraci\u00f3n fuente letra Se declara la fuente del Panel (Helvetica). myFont = font.Font(family='Helvetica') Declaraci\u00f3n de WD y visuales Se declara la direcci\u00f3n de la carpeta de trabajo (wd) y ubicaci\u00f3n de visuales del panel. path = os.getcwd() path_visuals = path + r\"\\visuals\" path_excelfiles = path + r\"\\Archivos Excel\" path_memory = path + r\"\\Memoria\" path_plantillas = path + r\"\\plantillas\" Creaci\u00f3n de Banner Se declara el banner de la parte superior. change_wd(path_visuals) logo_banner = ImageTk.PhotoImage(Image.open(\"logo2.png\").resize((300, 40))) banner = tk.Label(mainMenu, image=logo_banner, height=50, bg=rojo) banner.pack(fill=tk.X, side=\"top\") Definici\u00f3n de la Versi\u00f3n Se declara la versi\u00f3n del Panel. version = 'Version 2.3: MARCOPOLO-2' version_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text=version, font=('Gill Sans MT', 14, 'bold')) version_title.place(relx=0.75, rely=0.018, relheight=0.03, relwidth=0.2) Definici\u00f3n T\u00edtulo \"Carga de Archivos\" Se declara el t\u00edtulo de botones de carga de archivos. load_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Carga de Archivos', font='Helvetica 11 bold') load_title.place(relx=0.05, rely=line_1, relheight=0.055, relwidth=0.28) Definici\u00f3n Bot\u00f3n Carga Anexo 1 Se declara el bot\u00f3n de carga del anexo 1. load_a1_button = tk.Button(mainMenu, text=\"Cargar Anexo 1\", command=lambda: threading.Thread(target=vis_load_a1).start(), bg=gris, fg=blanco) load_a1_button.place(relx=0.09, rely=line_1 + 0.065) Definici\u00f3n Bot\u00f3n Carga Anexo 3 Se declara el bot\u00f3n de carga del anexo 3. load_a3_button = tk.Button(mainMenu, text=\"Cargar Anexo 3\", command=lambda: threading.Thread(target=vis_load_a3).start(), bg=gris, fg=blanco) load_a3_button.place(relx=0.09, rely=line_1 + 0.101) Definici\u00f3n Bot\u00f3n Carga Anexo 4 Se declara el bot\u00f3n de carga del anexo 4. load_a4_button = tk.Button(mainMenu, text=\"Cargar Anexo 4\", command=lambda: threading.Thread(target=vis_load_a4).start(), bg=gris, fg=blanco) load_a4_button.place(relx=0.09, rely=line_1 + 0.138) Definici\u00f3n Bot\u00f3n Carga Anexo 1 Vigente Se declara el bot\u00f3n de carga del anexo 1 vigente (actualmente desactivado). load_a1base_button = tk.Button(mainMenu, text=\"Cargar Anexo 1 Vigente\", command=lambda: threading.Thread(target=method).start(), bg=gris, fg=blanco) load_a1base_button.place(relx=0.15, rely=line_1 + 0.065) load_a1base_button[\"state\"] = \"disabled\" Definici\u00f3n Bot\u00f3n Carga Anexo 3 Vigente Se declara el bot\u00f3n de carga del anexo 3 vigente. load_a3base_button = tk.Button(mainMenu, text=\"Cargar Anexo 3 Vigente\", command=lambda: threading.Thread(target=vis_load_a3b).start(), bg=gris, fg=blanco) load_a3base_button.place(relx=0.15, rely=line_1 + 0.101) Definici\u00f3n Bot\u00f3n Carga Anexo 4 Vigente Se declara el bot\u00f3n de carga del anexo 4 vigente. load_a4base_button = tk.Button(mainMenu, text=\"Cargar Anexo 4 Vigente\", command=lambda: threading.Thread(target=vis_load_a4b).start(), bg=gris, fg=blanco) load_a4base_button.place(relx=0.15, rely=line_1 + 0.138) Definici\u00f3n Bot\u00f3n Carga Consolidado de Paradas Se declara el bot\u00f3n de carga del consolidado de paradas. load_consparadas_button = tk.Button(mainMenu, text=\"Cargar Cons. Paradas\", command=lambda: threading.Thread(target=vis_load_conspar).start(), bg=gris, fg=blanco) load_consparadas_button.place(relx=0.235, rely=line_1 + 0.065) Definici\u00f3n Bot\u00f3n Carga Consolidado de Salidas Se declara el bot\u00f3n de carga del consolidado de salidas. load_conssalid_button = tk.Button(mainMenu, text=\"Cargar Cons. Salidas\", command=lambda: threading.Thread(target=vis_load_cons).start(), bg=gris, fg=blanco) load_conssalid_button.place(relx=0.235, rely=line_1 + 0.101) Definici\u00f3n Bot\u00f3n Carga Base Consolidado Se declara el bot\u00f3n de carga del archivo base consolidado. load_base_cons_button = tk.Button(mainMenu, text=\"Cargar Base Cons.\", command=lambda: threading.Thread(target=vis_load_base_cons).start(), bg=gris, fg=blanco) load_base_cons_button.place(relx=0.238, rely=line_1 + 0.138) Definici\u00f3n T\u00edtulo \"Archivos Cargados\" Se declara el t\u00edtulo de archivos cargados. loaded_files_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Archivos Cargados', font='Helvetica 11 bold') loaded_files_title.place(relx=0.05, rely=0.25, relheight=0.055, relwidth=0.28) Definici\u00f3n Cuadro Anexo 1 Cargado Se declara el cuadro de anexo 1 cargado y estado. anexo1_title_label = tk.Label(mainMenu, text='Anexo 1 Nuevo:', borderwidth=1.5, relief=\"solid\") anexo1_title_label.place(relx=0.05, rely=0.315, relheight=0.04, relwidth=0.075) a1_filename = tk.StringVar() a1_filename.set('No cargado') anexo1_file_label = tk.Label(mainMenu, textvariable=a1_filename, borderwidth=1.5, relief=\"solid\") anexo1_file_label.place(relx=0.124, rely=0.315, relheight=0.04, relwidth=0.206) Definici\u00f3n Cuadro Anexo 3 Cargado Se declara el cuadro de anexo 3 cargado y estado. anexo3_title_label = tk.Label(mainMenu, text='Anexo 3 Nuevo:', borderwidth=1.5, relief=\"solid\") anexo3_title_label.place(relx=0.05, rely=0.365, relheight=0.04, relwidth=0.075) a3_filename = tk.StringVar() a3_filename.set('No cargado') anexo3_file_label = tk.Label(mainMenu, textvariable=a3_filename, borderwidth=1.5, relief=\"solid\") anexo3_file_label.place(relx=0.124, rely=0.365, relheight=0.04, relwidth=0.206) Definici\u00f3n Cuadro Anexo 4 Cargado Se declara el cuadro de anexo 4 cargado y estado. anexo4_title_label = tk.Label(mainMenu, text='Anexo 4 Nuevo:', borderwidth=1.5, relief=\"solid\") anexo4_title_label.place(relx=0.05, rely=0.415, relheight=0.04, relwidth=0.075) a4_filename = tk.StringVar() a4_filename.set('No cargado') anexo4_file_label = tk.Label(mainMenu, textvariable=a4_filename, borderwidth=1.5, relief=\"solid\") anexo4_file_label.place(relx=0.124, rely=0.415, relheight=0.04, relwidth=0.206) Definici\u00f3n Cuadro Anexo 3 Vigente Cargado Se declara el cuadro de anexo 3 vigente cargado y estado. anexo3b_title_label = tk.Label(mainMenu, text='Anexo 3 Vigente:', borderwidth=1.5, relief=\"solid\") anexo3b_title_label.place(relx=0.05, rely=0.465, relheight=0.04, relwidth=0.075) a3b_filename = tk.StringVar() a3b_filename.set('No cargado') anexo3b_file_label = tk.Label(mainMenu, textvariable=a3b_filename, borderwidth=1.5, relief=\"solid\") anexo3b_file_label.place(relx=0.124, rely=0.465, relheight=0.04, relwidth=0.206) Definici\u00f3n Cuadro Anexo 4 Vigente Cargado Se declara el cuadro de anexo 4 vigente cargado y estado. a4b_title_label = tk.Label(mainMenu, text='Anexo 4 Vigente:', borderwidth=1.5, relief=\"solid\") a4b_title_label.place(relx=0.05, rely=0.515, relheight=0.04, relwidth=0.075) a4b_filename = tk.StringVar() a4b_filename.set('No cargado') a4b_file_label = tk.Label(mainMenu, textvariable=a4b_filename, borderwidth=1.5, relief=\"solid\") a4b_file_label.place(relx=0.124, rely=0.515, relheight=0.04, relwidth=0.206) Definici\u00f3n Cuadro Consolidado de Salidas Cargado Se declara el cuadro de archivo Consolidado de Salidas cargado y estado. conssalid_title_label = tk.Label(mainMenu, text='Cons. Salidas:', borderwidth=1.5, relief=\"solid\") conssalid_title_label.place(relx=0.05, rely=0.565, relheight=0.04, relwidth=0.075) conssalid_filename = tk.StringVar() conssalid_filename.set('No cargado') conssalid_file_label = tk.Label(mainMenu, textvariable=conssalid_filename, borderwidth=1.5, relief=\"solid\") conssalid_file_label.place(relx=0.124, rely=0.565, relheight=0.04, relwidth=0.206) Definici\u00f3n Cuadro Consolidado de Paradas Cargado Se declara el cuadro de archivo Consolidado de Paradas cargado y estado. conspar_label = tk.Label(mainMenu, text='Cons. Paradas:', borderwidth=1.5, relief=\"solid\") conspar_label.place(relx=0.05, rely=0.615, relheight=0.04, relwidth=0.075) conspar_filename = tk.StringVar() conspar_filename.set('No cargado') conspar_file_label = tk.Label(mainMenu, textvariable=conspar_filename, borderwidth=1.5, relief=\"solid\") conspar_file_label.place(relx=0.124, rely=0.615, relheight=0.04, relwidth=0.206) Definici\u00f3n Cuadro Base Consolidado Cargado Se declara el cuadro de archivo Base Consolidado cargado y estado. base_cons_label = tk.Label(mainMenu, text='Base Consolidado:', borderwidth=1.5, relief=\"solid\") base_cons_label.place(relx=0.05, rely=0.665, relheight=0.04, relwidth=0.075) base_cons_filename = tk.StringVar() base_cons_filename.set('No cargado') base_cons_file_label = tk.Label(mainMenu, textvariable=base_cons_filename, borderwidth=1.5, relief=\"solid\") base_cons_file_label.place(relx=0.124, rely=0.665, relheight=0.04, relwidth=0.206) Definici\u00f3n Botones Gesti\u00f3n Archivos Se declaran los botones de guardar, cargar y limpiar (eliminar) archivos. save_allfiles_button = tk.Button(mainMenu, text=\"Guardar Anexos\", command=lambda: threading.Thread(target=save_all_anexos).start(), bg=gris, fg=blanco) save_allfiles_button.place(relx=0.075, rely=0.74) load_allfiles_button = tk.Button(mainMenu, text=\"Cargar Anexos\", command=lambda: threading.Thread(target=load_all_anexos).start(), bg=gris, fg=blanco) load_allfiles_button.place(relx=0.17, rely=0.74) clear_allfiles_button = tk.Button(mainMenu, text=\"Limpiar Anexos\", command=lambda: threading.Thread(target=clear_all_anexos).start(), bg=gris, fg=blanco) clear_allfiles_button.place(relx=0.255, rely=0.74) Definici\u00f3n Secci\u00f3n Selecci\u00f3n de Unidad Se declaran la etiqueta y la lista desplegable para seleccionar unidad de servicio. select_unidad_label = tk.Label(mainMenu, text='Selecciona unidad a revisar:', borderwidth=0, relief=\"solid\", bg=blanco, font='Helvetica 11') select_unidad_label.place(relx=0.06, rely=0.785, relheight=0.055, relwidth=0.115) unidad_combo = ttk.Combobox(values=[\"\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"]) unidad_combo.bind(\"<<ComboboxSelected>>\", selection_changed_main) unidad_combo.place(relx=0.18, rely=0.805) Definici\u00f3n Secci\u00f3n Paso 0 Revisi\u00f3n Se declaran la etiqueta y los botones para revisiones Paso 0 paso0_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 0 (Revisi\u00f3n de Par\u00e1metros Faltantes)', wraplength=200, font='Helvetica 11 bold') paso0_title.place(relx=labels_line, rely=line_1, relheight=0.055, relwidth=width_label) a3_param_check_button = tk.Button(mainMenu, text=\"Revisar Par\u00e1metros Anexo 3\", command=lambda: threading.Thread(target=check_params_a3).start(), wraplength=90, bg=gris, fg=blanco) a3_param_check_button.place(relx=buttons_line, rely=line_1, relwidth=0.05) a4_param_check_button = tk.Button(mainMenu, text=\"Revisar Par\u00e1metros Anexo 4\", command=lambda: threading.Thread(target=check_params_a4).start(), wraplength=90, bg=gris, fg=blanco) a4_param_check_button.place(relx=buttons_line + 0.051, rely=line_1, relwidth=0.05) Definici\u00f3n Secci\u00f3n Paso 1 Revisi\u00f3n Se declaran la etiqueta y los botones para revisiones Paso 1 paso1_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 1 (Comparaci\u00f3n Anexo 3 Nuevo y Vigente)', wraplength=200, font='Helvetica 11 bold') paso1_title.place(relx=labels_line, rely=line_1 + 0.075, relheight=0.055, relwidth=width_label) comp_a3v_a3n_button = tk.Button(mainMenu, text=\"Compara Anexo 3 Nuevo y Vigente\", command=lambda: threading.Thread(target=comp_a3v_a3n_panel).start(), wraplength=182, bg=gris, fg=blanco) comp_a3v_a3n_button.place(relx=buttons_line, rely=line_1 + 0.082, relwidth=0.1) Definici\u00f3n Secci\u00f3n Paso 2 Revisi\u00f3n Se declaran la etiqueta y los botones para revisiones Paso 2. paso2_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 2 (Comparaci\u00f3n Horarios y Tabla Horaria)', wraplength=200, font='Helvetica 11 bold') paso2_title.place(relx=labels_line, rely=0.22, relheight=0.055, relwidth=width_label) comp_a1_a4_button = tk.Button(mainMenu, text=\"Revisar Consistencia Anexo 1 y Anexo 4\", command=lambda: threading.Thread(target=comp_time_a1_a4).start(), wraplength=170, bg=gris, fg=blanco) comp_a1_a4_button.place(relx=buttons_line, rely=0.23, relwidth=0.1) Definici\u00f3n Secci\u00f3n Paso 3 Revisi\u00f3n Se declaran la etiqueta y los botones para revisiones Paso 3. paso3_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 3 (Comparaci\u00f3n Par\u00e1metros y Tabla Horaria)', wraplength=200, font='Helvetica 11 bold') paso3_title.place(relx=labels_line, rely=0.3, relheight=0.055, relwidth=width_label) comp_a3_a4_button = tk.Button(mainMenu, text=\"Revisar Consistencia Anexo 3 y Anexo 4\", command=lambda: threading.Thread(target=comp_param_a3_a4).start(), wraplength=170, bg=gris, fg=blanco) comp_a3_a4_button.place(relx=buttons_line, rely=0.31, relwidth=0.1) Definici\u00f3n Secci\u00f3n Paso 4.1 Revisi\u00f3n (DESHABILITADOS) Se declaran la etiqueta y los botones para revisiones Paso 4.1 (Consistencia Agr MH). paso41_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 4.1 (Revisi\u00f3n de Consistencia de Agrupaci\u00f3n MH)', wraplength=200, font='Helvetica 11 bold') paso41_title.place(relx=labels_line, rely=0.38, relheight=0.055, relwidth=width_label) serr_salid_a3_button = tk.Button(mainMenu, text=\"Revisar Regularidad Salidas Anexo 3 (sin MHA)\", command=lambda: threading.Thread(target=method).start(), wraplength=120, bg=gris, fg=blanco) serr_salid_a3_button.place(relx=buttons_line, rely=0.38) serr_salid_a3_button[\"state\"] = \"disabled\" comp_a3_mha_opt_button = tk.Button(mainMenu, text=\"Revisar optimalidad de MHA Anexo 3\", command=lambda: threading.Thread(target=method).start(), wraplength=90, bg=gris, fg=blanco) comp_a3_mha_opt_button.place(relx=buttons_line + 0.062, rely=0.38) comp_a3_mha_opt_button[\"state\"] = 'disabled' Definici\u00f3n Secci\u00f3n Paso 4.2 Revisi\u00f3n (en desarrollo) Se declaran la etiqueta y los botones para revisiones Paso 4.1 (Regularidad Intervalos). paso42_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 4.2 (Revisi\u00f3n de Regularidad en Intervalos)', wraplength=200, font='Helvetica 11 bold') paso42_title.place(relx=labels_line, rely=0.46, relheight=0.067, relwidth=width_label) rev_interv_a4_1_button = tk.Button(mainMenu, text=\"Revisar Diferencias en intervalos Anexo 4 (con MHA)\", command=lambda: threading.Thread(target=check_intervalos_a4).start(), wraplength=100, bg=gris, fg=blanco) rev_interv_a4_1_button.place(relx=buttons_line, rely=0.46) rev_interv_a4_2_button = tk.Button(mainMenu, text=\"Revisar Diferencias en intervalos Anexo 4 (sin MHA)\", command=lambda: threading.Thread(target=method).start(), wraplength=100, bg=gris, fg=blanco) rev_interv_a4_2_button.place(relx=buttons_line + 0.058, rely=0.46) rev_interv_a4_2_button[\"state\"] = 'disabled' Definici\u00f3n Secci\u00f3n Generadores Se declaran la etiqueta de la secci\u00f3n de Generadores extrastep_title = tk.Label(mainMenu, bg=azul, fg=blanco, bd=4, text='Generadores', font='Helvetica 11 bold') extrastep_title.place(relx=labels_line, rely=line_1 + 0.49, relheight=0.045, relwidth=0.51) Definici\u00f3n Secci\u00f3n Generados desde Anexo 4 Se declaran la etiqueta y botones para generar archivos de anexos (1 y 3) desde Anexo 4. from_a4_title = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Desde Anexo 4', font='Helvetica 10 bold') from_a4_title.place(relx=labels_line, rely=line_1 + 0.546, relheight=0.045, relwidth=width_label) a1_from_a4_button = tk.Button(mainMenu, text=\"Genera Anexo 1 desde Anexo 4\", command=lambda: threading.Thread(target=save_a1_from_a4).start(), wraplength=90, bg=azul_deep, fg=blanco) a1_from_a4_button.place(relx=buttons_line, rely=line_1 + 0.546) a3_from_a4_button = tk.Button(mainMenu, text=\"Genera Anexo 3 desde Anexo 4\", command=lambda: threading.Thread(target=save_a3_from_a4).start(), wraplength=90, bg=azul_deep, fg=blanco) a3_from_a4_button.place(relx=buttons_line + 0.0504, rely=line_1 + 0.546) Definici\u00f3n Secci\u00f3n Generados desde Anexo 3 Se declaran la etiqueta y botones para generar archivos de anexos desde Anexo 3. from_a3_title = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Desde Anexo 3', font='Helvetica 10 bold') from_a3_title.place(relx=labels_line + 0.28, rely=line_1 + 0.546, relheight=0.045, relwidth=width_label) a4_from_a3_button = tk.Button(mainMenu, text=\"Genera Anexo 4 desde Anexo 3\", command=lambda: threading.Thread(target=save_a4_from_a3).start(), wraplength=90, bg=azul_deep, fg=blanco) a4_from_a3_button.place(relx=buttons_line + 0.28, rely=line_1 + 0.546) Definici\u00f3n Secci\u00f3n Generados desde Consolidado Se declaran la etiqueta y botones para generar un Anexo 3 desde A3 Vigente y Consolidado. a3_from_cons_title = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Anexo 3 desde Consolidado', font='Helvetica 10 bold') a3_from_cons_title.place(relx=labels_line, rely=line_1 + 0.603, relheight=0.045, relwidth=width_label) a3_slds_w_base_button = tk.Button(mainMenu, text=\"Genera Salidas A3 desde Consolidado con A3 Vigente\", command=lambda: threading.Thread(target=save_a3_ns_w_base).start(), wraplength=150, bg=azul_deep, fg=blanco) a3_slds_w_base_button.place(relx=buttons_line, rely=line_1 + 0.603) Definici\u00f3n Secci\u00f3n Generaci\u00f3n de Perfil de Flota Se declaran la etiqueta y botones para generar un archivo de Perfil de Flota. perfil_flota_title = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='C\u00e1lculo Perfil de Flota', font='Helvetica 10 bold') perfil_flota_title.place(relx=labels_line, rely=line_1 + 0.66, relheight=0.045, relwidth=width_label) perfil_flota_button = tk.Button(mainMenu, text=\"Generar Archivo Perfil Flota\", command=lambda: threading.Thread(target=calc_perfil_flota).start(), wraplength=200, bg=azul_deep, fg=blanco) perfil_flota_button.place(relx=buttons_line, rely=line_1 + 0.667) Definici\u00f3n Secci\u00f3n Generaci\u00f3n de Consolidado Se declaran la etiqueta y botones para generar archivos de Consolidado. cons_us_title = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Consolidados US', font='Helvetica 10 bold') cons_us_title.place(relx=labels_line, rely=line_1 + 0.718, relheight=0.055, relwidth=width_label) cons_per_button = tk.Button(mainMenu, text=\"Generar Archivo Consolidado por Periodos\", command=lambda: threading.Thread(target=genera_cons_periodo_us).start(), wraplength=90, bg=azul_deep, fg=blanco) cons_per_button.place(relx=buttons_line, rely=line_1 + 0.718) cons_mh_button = tk.Button(mainMenu, text=\"Generar Archivo Consolidado por MH\", command=lambda: threading.Thread(target=genera_cons_mh_us).start(), wraplength=90, bg=azul_deep, fg=blanco) cons_mh_button.place(relx=buttons_line + 0.0518, rely=line_1 + 0.718) Definici\u00f3n Secci\u00f3n Generaci\u00f3n de Nueva Agrupaci\u00f3n para A3 Se declaran la etiqueta y botones para generar nueva agrupaci\u00f3n para el Anexo 3. a3_regroup = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Anexo 3 Reagrupado', font='Helvetica 10 bold') a3_regroup.place(relx=labels_line, rely=line_1 + 0.785, relheight=0.045, relwidth=width_label) a3_regroup_button = tk.Button(mainMenu, text=\"Generar Anexo 3 con Nueva Agrupaci\u00f3n MH\", command=lambda: threading.Thread(target=save_a3_regroup).start(), wraplength=150, bg=azul_deep, fg=blanco) a3_regroup_button.place(relx=buttons_line, rely=line_1 + 0.785) Definici\u00f3n Secci\u00f3n Conteo de Km. Se declaran la etiqueta y botones para generar ventana con conteo de kil\u00f3metros, para Anexos 3. cont_km_label = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Conteo de KM desde Anexo 3', font='Helvetica 10 bold') cont_km_label.place(relx=labels_line, rely=line_1 + 0.845, relheight=0.045, relwidth=width_label) contar_km_button = tk.Button(mainMenu, text=\"Contar KM totales de Anexo 3\", command=lambda: threading.Thread(target=contar_km).start(), wraplength=250, bg=azul_deep, fg=blanco) contar_km_button.place(relx=buttons_line, rely=line_1 + 0.853) Definici\u00f3n Secci\u00f3n Consolidado de Intervalos Se declaran la etiqueta y botones para generar ventana con An\u00e1lisis de Intervalos entre salidas programadas por periodo. cons_interv_label = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Revisi\u00f3n preliminar de Intervalos desde Consolidado de Salidas', wraplength=200, font='Helvetica 11 bold') cons_interv_label.place(relx=labels_line + 0.28, rely=line_1, relheight=0.065, relwidth=width_label) cons_interv_button = tk.Button(mainMenu, text=\"Validar Consolidado de Salidas\", command=lambda: threading.Thread(target=valid_cons_vis).start(), wraplength=90, bg=gris, fg=blanco) cons_interv_button.place(relx=labels_line + 0.4, rely=line_1 + 0.006) Definici\u00f3n Secci\u00f3n An\u00e1lisis de Frecuencias Se declaran la etiqueta y botones para generar ventana con An\u00e1lisis de Frecuencias. analys_frec_label = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Revisi\u00f3n de Frecuencias', wraplength=200, font='Helvetica 11 bold') analys_frec_label.place(relx=labels_line + 0.28, rely=line_1 + 0.076, relheight=0.06, relwidth=width_label) analys_frec_button = tk.Button(mainMenu, text=\"Generar An\u00e1lisis de Frecuencias\", command=lambda: threading.Thread(target=analisis_frecuencias).start(), wraplength=90, bg=gris, fg=blanco) analys_frec_button.place(relx=labels_line + 0.4, rely=line_1 + 0.08 + 0.006) Definici\u00f3n Secci\u00f3n Revisi\u00f3n de Buses Biportales Se declaran la etiqueta y botones para generar ventana con para Revisi\u00f3n de Buses Biportales. biportal_label = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Revisi\u00f3n de Buses Biportales', wraplength=200, font='Helvetica 11 bold') biportal_label.place(relx=labels_line + 0.28, rely=line_1 + 0.146, relheight=0.06, relwidth=width_label) biportal_button = tk.Button(mainMenu, text=\"Revisar asignaci\u00f3n de buses biportales\", command=lambda: threading.Thread(target=revision_biportales_a4).start(), wraplength=90, bg=gris, fg=blanco) biportal_button.place(relx=labels_line + 0.4, rely=line_1 + 0.149)","title":"Front End (Interfaz)"},{"location":"archivo_panel_po_us/#front-end-interfaz","text":"","title":"Front End (Interfaz)"},{"location":"archivo_panel_po_us/#paquetes","text":"tkinter - Generaci\u00f3n de interfaces. PIL (pillow) - Gesti\u00f3n de im\u00e1genes. threading - Capacidad de ejecuci\u00f3n de acciones en paralelo. openpyxl - Tratamiento de archivos Excel. xlsxwriter - Generador de archivos Excel. tooltip - Creaci\u00f3n y visualizaci\u00f3n de mensajes 'on-cursor'. pandastable - Creaci\u00f3n y visualizaci\u00f3n de Pandas DataFrames en tkinter. warnings - Gesti\u00f3n de mensajes de advertencia. shutil - Tratamiento de archivos Excel. matplotlib - Generaci\u00f3n de gr\u00e1ficos 2D. core - Funcionamiento interno de Panel PO.","title":"Paquetes"},{"location":"archivo_panel_po_us/#funciones-nativas-en-archivo-panel_po_uspy","text":"","title":"Funciones nativas en Archivo 'panel_po_us.py'"},{"location":"archivo_panel_po_us/#panel_po_uspop_up_savior","text":"panel_po_us. pop_up_savior (df: _pandas.DataFrame , tipo_archivo: str ) Funci\u00f3n que permite exportar un DataFrame en un archivo Excel, con un nombre particular, unidad revisada, fecha y hora de revisi\u00f3n. Par\u00e1metros: df : DataFrame de Pandas a exportar tipo_archivo : Nombre que se le desea otorgar al archivo Excel","title":"panel_po_us.pop_up_savior"},{"location":"archivo_panel_po_us/#panel_po_uspop_up_savior_png","text":"panel_po_us. pop_up_savior_png (figure: _matplotlib.Figure , tipo_archivo: str ) Funci\u00f3n que permite exportar un gr\u00e1fico en un archivo PNG, con un nombre particular, unidad revisada, fecha y hora de revisi\u00f3n. Par\u00e1metros: figure : Figura de Matplotlib a exportar tipo_archivo : Nombre que se le desea otorgar al archivo","title":"panel_po_us.pop_up_savior_png"},{"location":"archivo_panel_po_us/#panel_po_usfilter_df_show","text":"panel_po_us. filter_df_show (table: _pandastable.Table , df: pandas.DataFrame , n_col: str ) Funci\u00f3n que se utiliza en ventanas emergentes; permite filtrar las tablas, mostrando las filas con problemas seg\u00fan la columna que se utilice para el filtro. Par\u00e1metros: table : Objeto Table asociado a un DataFrame df : DataFrame de Pandas n_col : Nombre de la columna a filtrar","title":"panel_po_us.filter_df_show"},{"location":"archivo_panel_po_us/#panel_po_usfilter_df_show_2_tipodia","text":"panel_po_us. filter_df_show_2_tipodia (table: _pandastable.Table , df: pandas.DataFrame , td: str ) Funci\u00f3n que se utiliza en ventanas emergentes; permite filtrar las tablas por tipo de d\u00eda. Par\u00e1metros: table : Objeto Table asociado a un DataFrame df : DataFrame de Pandas td : Nombre del tipo de d\u00eda que se desea filtrar","title":"panel_po_us.filter_df_show_2_tipodia"},{"location":"archivo_panel_po_us/#panel_po_uschange_df_view","text":"panel_po_us. change_df_view (table: _pandastable.Table , df: pandas.DataFrame , mha: bool ) Funci\u00f3n que se utiliza en ventanas emergentes de comparaci\u00f3n de Anexo 3 y Anexo 4; permite cambiar la vista y botones de la vista para observar seg\u00fan MH o Agrupaci\u00f3n de MH. Par\u00e1metros: table : Objeto Table asociado a un DataFrame df : DataFrame de Pandas mha : Variable booleana que permite el cambio de visa en botones de filtro de la ventana emergente","title":"panel_po_us.change_df_view"},{"location":"archivo_panel_po_us/#panel_po_uscheck_params_a3","text":"panel_po_us._ check_params_a3 () Funci\u00f3n que gatilla la revisi\u00f3n de consistencia interna en par\u00e1metros del Anexo 3. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que el archivo es consistente, o una tabla con las filas del Anexo 3 que presentan inconsistencia. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue.","title":"panel_po_us.check_params_a3"},{"location":"archivo_panel_po_us/#panel_po_uscheck_params_a4","text":"panel_po_us._ check_params_a4 () Funci\u00f3n que gatilla la revisi\u00f3n de consistencia interna en par\u00e1metros del Anexo 4. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 4 Nuevo cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que el archivo es consistente, o una tabla con las filas del Anexo 4 que presentan inconsistencia. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue.","title":"panel_po_us.check_params_a4"},{"location":"archivo_panel_po_us/#panel_po_uscomp_a3v_a3n_panel","text":"panel_po_us._ comp_a3v_a3n_panel () Funci\u00f3n que gatilla la revisi\u00f3n comparativa entre par\u00e1metros del Anexo 3 Nuevo y el Vigente. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado y un Anexo 3 Vigente cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que ambos archivos son consistentes, o una tabla comparativa con los par\u00e1metros que no coinciden. Tambi\u00e9n se presentan algunos botones para filtrar la informaci\u00f3n de la tabla por tipo de d\u00eda, o par\u00e1metro de comparaci\u00f3n. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue.","title":"panel_po_us.comp_a3v_a3n_panel"},{"location":"archivo_panel_po_us/#panel_po_uscomp_time_a1_a4","text":"panel_po_us._ comp_time_a1_a4 () Funci\u00f3n que gatilla la revisi\u00f3n comparativa entre horarios de operaci\u00f3n seg\u00fan el Anexo 1 y la programaci\u00f3n de primera y \u00faltima salida del d\u00eda seg\u00fan Anexo 4. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 1 Nuevo cargado y un Anexo 4 Nuevo cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que ambos archivos son consistentes, o una tabla comparativa con los par\u00e1metros que no coinciden. Tambi\u00e9n se presentan algunos botones para filtrar la informaci\u00f3n de la tabla por tipo de d\u00eda, o par\u00e1metro de comparaci\u00f3n. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue.","title":"panel_po_us.comp_time_a1_a4"},{"location":"archivo_panel_po_us/#panel_po_uscomp_param_a3_a4","text":"panel_po_us._ comp_param_a3_a4 () Funci\u00f3n que gatilla la revisi\u00f3n comparativa entre par\u00e1metros de operaci\u00f3n seg\u00fan el Anexo 3 y el Anexo 4. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 1 Nuevo cargado y un Anexo 4 Nuevo cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que ambos archivos son consistentes, o una tabla comparativa con los par\u00e1metros que no coinciden. Tambi\u00e9n se presentan algunos botones para filtrar la informaci\u00f3n de la tabla por tipo de d\u00eda, o par\u00e1metro de comparaci\u00f3n. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue. Para esta funci\u00f3n se ha programado una forma de cambiar todo el men\u00fa de filtros, ya que la informaci\u00f3n puede compararse a nivel de media hora, o bien a nivel de agrupaci\u00f3n de medias horas.","title":"panel_po_us.comp_param_a3_a4"},{"location":"archivo_panel_po_us/#panel_po_uscheck_intervalos_a4","text":"panel_po_us._ check_intervalos_a4 () Funci\u00f3n que gatilla la revisi\u00f3n de consistencia en los intervalos entre salidas programadas del Anexo 4 Nuevo, considerando la agrupaci\u00f3n de medias horas que se publica en el Anexo 3 Nuevo. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado y un Anexo 4 Nuevo cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que los intervalos cumplen las reglas de programaci\u00f3n, o una tabla comparativa con los par\u00e1metros que no cumplen. Tambi\u00e9n se presentan algunos botones para filtrar la informaci\u00f3n de la tabla por tipo de d\u00eda. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue.","title":"panel_po_us.check_intervalos_a4"},{"location":"archivo_panel_po_us/#panel_po_ussave_a1_from_a4","text":"panel_po_us._ save_a1_from_a4 () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Anexo 1 a partir de Tabla Horaria Anexo 4. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 4 Nuevo cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo.","title":"panel_po_us.save_a1_from_a4"},{"location":"archivo_panel_po_us/#panel_po_ussave_a3_from_a4","text":"panel_po_us._ save_a3_from_a4 () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Anexo 3 a partir de Tabla Horaria Anexo 4. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 4 Nuevo cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo.","title":"panel_po_us.save_a3_from_a4"},{"location":"archivo_panel_po_us/#panel_po_ussave_a4_from_a3","text":"panel_po_us._ save_a4_from_a3 () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Tabla Horaria Anexo 4 a partir de un Anexo 3 Nuevo cargado. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo.","title":"panel_po_us.save_a4_from_a3"},{"location":"archivo_panel_po_us/#panel_po_ussave_a3_ns_w_base","text":"panel_po_us._ save_a3_ns_w_base () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Anexo 3 a partir de un Consolidado de Salidas y un Anexo 1 (para vigencia de servicios). La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 1 Nuevo cargado y un Consolidado de Salidas cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo.","title":"panel_po_us.save_a3_ns_w_base"},{"location":"archivo_panel_po_us/#panel_po_uscalc_perfil_flota","text":"panel_po_us._ calc_perfil_flota () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Perfil de Flota a partir de un Anexo 4 Nuevo. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 4 Nuevo cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo.","title":"panel_po_us.calc_perfil_flota"},{"location":"archivo_panel_po_us/#panel_po_usgenera_cons_mh_us","text":"panel_po_us._ genera_cons_mh_us () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Consolidado Frecuencias MH a partir de un Anexo 3 Nuevo y un archivo Base Consolidado. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado y un Base Consolidado cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo.","title":"panel_po_us.genera_cons_mh_us"},{"location":"archivo_panel_po_us/#panel_po_usgenera_cons_periodo_us","text":"panel_po_us._ genera_cons_periodo_us () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Consolidado de Par\u00e1metros a partir de un Anexo 3 Nuevo y un archivo Base Consolidado. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado y un Base Consolidado cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo.","title":"panel_po_us.genera_cons_periodo_us"},{"location":"archivo_panel_po_us/#panel_po_ussave_a3_regroup","text":"panel_po_us._ save_a3_regroup () Funci\u00f3n que gatilla la generaci\u00f3n de archivo Anexo 3 con agrupaci\u00f3n de MH \u00f3ptima modificada, a partir de un Anexo 3 Nuevo. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 3 Nuevo cargado) y luego genera una ventana emergente para escoger la direcci\u00f3n donde guardar el archivo.","title":"panel_po_us.save_a3_regroup"},{"location":"archivo_panel_po_us/#panel_po_usvis_load_a1","text":"panel_po_us._ vis_load_a1 () Funci\u00f3n que gatilla la carga/lectura de archivo Anexo 1 Nuevo. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n.","title":"panel_po_us.vis_load_a1"},{"location":"archivo_panel_po_us/#panel_po_usvis_load_a3","text":"panel_po_us._ vis_load_a3 () Funci\u00f3n que gatilla la carga/lectura de archivo Anexo 3 Nuevo. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n.","title":"panel_po_us.vis_load_a3"},{"location":"archivo_panel_po_us/#panel_po_usvis_load_a4","text":"panel_po_us._ vis_load_a4 () Funci\u00f3n que gatilla la carga/lectura de archivo Anexo 4 Nuevo. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n.","title":"panel_po_us.vis_load_a4"},{"location":"archivo_panel_po_us/#panel_po_usvis_load_a3b","text":"panel_po_us._ vis_load_a3b () Funci\u00f3n que gatilla la carga/lectura de archivo Anexo 3 Vigente. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n.","title":"panel_po_us.vis_load_a3b"},{"location":"archivo_panel_po_us/#panel_po_usvis_load_a4b","text":"panel_po_us._ vis_load_a4b () Funci\u00f3n que gatilla la carga/lectura de archivo Anexo 4 Vigente. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n.","title":"panel_po_us.vis_load_a4b"},{"location":"archivo_panel_po_us/#panel_po_usvis_load_base_cons","text":"panel_po_us._ vis_load_base_cons () Funci\u00f3n que gatilla la carga/lectura de archivo Base Consolidado. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n.","title":"panel_po_us.vis_load_base_cons"},{"location":"archivo_panel_po_us/#panel_po_usvis_load_cons","text":"panel_po_us._ vis_load_cons () Funci\u00f3n que gatilla la carga/lectura de archivo Consolidado de Salidas. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n.","title":"panel_po_us.vis_load_cons"},{"location":"archivo_panel_po_us/#panel_po_usvis_load_conspar","text":"panel_po_us._ vis_load_conspar () Funci\u00f3n que gatilla la carga/lectura de archivo Consolidado de Paradas. La funci\u00f3n llama al proceso interno, generando una ventana emergente para escoger el archivo y procesar su informaci\u00f3n.","title":"panel_po_us.vis_load_conspar"},{"location":"archivo_panel_po_us/#panel_po_usselection_changed_main","text":"panel_po_us. selection_changed_main (event: _None ) Funci\u00f3n que regula la selecci\u00f3n de unidad de servicio para la revisi\u00f3n de archivos. De esta forma, se puede filtrar la informaci\u00f3n de servicios de la unidad.","title":"panel_po_us.selection_changed_main"},{"location":"archivo_panel_po_us/#panel_po_ussave_all_anexos","text":"panel_po_us._ save_all_anexos () Funci\u00f3n que gatilla el guardado de los archivos cargados en el panel, en el directorio de memoria. La funci\u00f3n llama al proceso interno y al final de su ejecuci\u00f3n entrega un mensaje de \u00e9xito.","title":"panel_po_us.save_all_anexos"},{"location":"archivo_panel_po_us/#panel_po_usreset_button","text":"panel_po_us. reset_button (but: _tkinter.Button ) Funci\u00f3n que devuelve el estado del bot\u00f3n a su formato inicial.","title":"panel_po_us.reset_button"},{"location":"archivo_panel_po_us/#panel_po_usbutton_loading","text":"panel_po_us. button_loading (but: _tkinter.Button ) Funci\u00f3n que cambia el estado del bot\u00f3n al formato definido cuando el bot\u00f3n ha sido accionado y se est\u00e1 realizando el proceso asociado (bot\u00f3n amarillo).","title":"panel_po_us.button_loading"},{"location":"archivo_panel_po_us/#panel_po_usbutton_loaded","text":"panel_po_us. button_loaded (but: _tkinter.Button ) Funci\u00f3n que cambia el estado del bot\u00f3n al formato definido cuando el bot\u00f3n ha sido accionado y el proceso asociado ya ha terminado (bot\u00f3n verde).","title":"panel_po_us.button_loaded"},{"location":"archivo_panel_po_us/#panel_po_usload_all_anexos","text":"panel_po_us._ load_all_anexos () Funci\u00f3n que gatilla la recarga, al panel, de los archivos guardados en el directorio de memoria. La funci\u00f3n llama al proceso interno y al final de su ejecuci\u00f3n entrega un mensaje de \u00e9xito.","title":"panel_po_us.load_all_anexos"},{"location":"archivo_panel_po_us/#panel_po_usclear_all_anexos","text":"panel_po_us._ clear_all_anexos () Funci\u00f3n que gatilla la eliminaci\u00f3n de los archivos guardados en el directorio de memoria y cargados en el panel. La funci\u00f3n llama al proceso interno y al final de su ejecuci\u00f3n entrega un mensaje de \u00e9xito.","title":"panel_po_us.clear_all_anexos"},{"location":"archivo_panel_po_us/#panel_po_usvalid_cons_vis","text":"panel_po_us._ valid_cons_vis () Funci\u00f3n que gatilla la generaci\u00f3n de una estructura de datos similar al Consolidado de Periodos, pero con informaci\u00f3n de intervalos promedio entre salidas programadas, a partir de un Consolidado de Salidas y un Anexo 1 Nuevo. La funci\u00f3n llama al proceso interno y al final de su ejecuci\u00f3n abre una ventana emergente en la que se visualiza la estructura de datos, con los intervalos mayores a 30 resaltados en rojo.","title":"panel_po_us.valid_cons_vis"},{"location":"archivo_panel_po_us/#panel_po_usanalisis_frecuencias","text":"panel_po_us._ analisis_frecuencias () Funci\u00f3n que gatilla la generaci\u00f3n de una estructura de datos y un gr\u00e1fico para el an\u00e1lisis de consistencia en salidas programadas (a trav\u00e9s de la frecuencia programada), a partir de un consolidado de salidas o un Anexo 3. La funci\u00f3n llama al proceso interno y al final de su ejecuci\u00f3n abre una ventana emergente en la que se visualiza el gr\u00e1fico y un bot\u00f3n para descargar la estructura de datos en un archivo Excel.","title":"panel_po_us.analisis_frecuencias"},{"location":"archivo_panel_po_us/#panel_po_usrevision_biportales_a4","text":"panel_po_us._ revision_biportales_a4 () Funci\u00f3n que gatilla la revisi\u00f3n de que se asignen buses biportales (en programaci\u00f3n de salidas A4) a servicios que operen en paraderos de puerta izquierda. La funci\u00f3n llama al proceso interno (siempre que haya un Anexo 4 Nuevo cargado y un Consolidado de Paradas cargado) y luego genera una ventana emergente con dos posibles resultados: un mensaje de que el archivo Anexo 4 est\u00e1 correcto, o una tabla con las filas del Anexo 4 que presentan tienen problemas con la asignaci\u00f3n de tipo de bus. Si se presenta la tabla, adem\u00e1s se presenta un bot\u00f3n para convertir la informaci\u00f3n en un archivo Excel que se descargue.","title":"panel_po_us.revision_biportales_a4"},{"location":"archivo_panel_po_us/#variables-declaradas","text":"","title":"Variables declaradas"},{"location":"archivo_panel_po_us/#colores-hex","text":"Se declaran valores HEX para los colores a utilizar en el panel. rojo = '#C00000' blanco = '#FFFFFF' gris = '#730202' clickeado = '#00A15A' negro = '#000000' loading = '#FFD700' azul = '#003399' celeste = '#3366CC' azul_deep = '#000033'","title":"Colores HEX"},{"location":"archivo_panel_po_us/#declaracion-objeto-panel","text":"Se declara un objeto de la clase PanelUS() para operar el programa internamente ( backend ). panel_core = PanelUS()","title":"Declaraci\u00f3n objeto Panel"},{"location":"archivo_panel_po_us/#declaracion-objeto-interfaz","text":"Se declara un objeto de la clase tkinter.Tk() que servir\u00e1 como la ventana principal de la interfaz ( frontend ). mainMenu = tk.Tk() mainMenu.title('Panel PO US') mainMenu.state(\"zoomed\") mainMenu['background'] = blanco","title":"Declaraci\u00f3n objeto Interfaz"},{"location":"archivo_panel_po_us/#declaracion-fuente-letra","text":"Se declara la fuente del Panel (Helvetica). myFont = font.Font(family='Helvetica')","title":"Declaraci\u00f3n fuente letra"},{"location":"archivo_panel_po_us/#declaracion-de-wd-y-visuales","text":"Se declara la direcci\u00f3n de la carpeta de trabajo (wd) y ubicaci\u00f3n de visuales del panel. path = os.getcwd() path_visuals = path + r\"\\visuals\" path_excelfiles = path + r\"\\Archivos Excel\" path_memory = path + r\"\\Memoria\" path_plantillas = path + r\"\\plantillas\"","title":"Declaraci\u00f3n de WD y visuales"},{"location":"archivo_panel_po_us/#creacion-de-banner","text":"Se declara el banner de la parte superior. change_wd(path_visuals) logo_banner = ImageTk.PhotoImage(Image.open(\"logo2.png\").resize((300, 40))) banner = tk.Label(mainMenu, image=logo_banner, height=50, bg=rojo) banner.pack(fill=tk.X, side=\"top\")","title":"Creaci\u00f3n de Banner"},{"location":"archivo_panel_po_us/#definicion-de-la-version","text":"Se declara la versi\u00f3n del Panel. version = 'Version 2.3: MARCOPOLO-2' version_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text=version, font=('Gill Sans MT', 14, 'bold')) version_title.place(relx=0.75, rely=0.018, relheight=0.03, relwidth=0.2)","title":"Definici\u00f3n de la Versi\u00f3n"},{"location":"archivo_panel_po_us/#definicion-titulo-carga-de-archivos","text":"Se declara el t\u00edtulo de botones de carga de archivos. load_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Carga de Archivos', font='Helvetica 11 bold') load_title.place(relx=0.05, rely=line_1, relheight=0.055, relwidth=0.28)","title":"Definici\u00f3n T\u00edtulo \"Carga de Archivos\""},{"location":"archivo_panel_po_us/#definicion-boton-carga-anexo-1","text":"Se declara el bot\u00f3n de carga del anexo 1. load_a1_button = tk.Button(mainMenu, text=\"Cargar Anexo 1\", command=lambda: threading.Thread(target=vis_load_a1).start(), bg=gris, fg=blanco) load_a1_button.place(relx=0.09, rely=line_1 + 0.065)","title":"Definici\u00f3n Bot\u00f3n Carga Anexo 1"},{"location":"archivo_panel_po_us/#definicion-boton-carga-anexo-3","text":"Se declara el bot\u00f3n de carga del anexo 3. load_a3_button = tk.Button(mainMenu, text=\"Cargar Anexo 3\", command=lambda: threading.Thread(target=vis_load_a3).start(), bg=gris, fg=blanco) load_a3_button.place(relx=0.09, rely=line_1 + 0.101)","title":"Definici\u00f3n Bot\u00f3n Carga Anexo 3"},{"location":"archivo_panel_po_us/#definicion-boton-carga-anexo-4","text":"Se declara el bot\u00f3n de carga del anexo 4. load_a4_button = tk.Button(mainMenu, text=\"Cargar Anexo 4\", command=lambda: threading.Thread(target=vis_load_a4).start(), bg=gris, fg=blanco) load_a4_button.place(relx=0.09, rely=line_1 + 0.138)","title":"Definici\u00f3n Bot\u00f3n Carga Anexo 4"},{"location":"archivo_panel_po_us/#definicion-boton-carga-anexo-1-vigente","text":"Se declara el bot\u00f3n de carga del anexo 1 vigente (actualmente desactivado). load_a1base_button = tk.Button(mainMenu, text=\"Cargar Anexo 1 Vigente\", command=lambda: threading.Thread(target=method).start(), bg=gris, fg=blanco) load_a1base_button.place(relx=0.15, rely=line_1 + 0.065) load_a1base_button[\"state\"] = \"disabled\"","title":"Definici\u00f3n Bot\u00f3n Carga Anexo 1 Vigente"},{"location":"archivo_panel_po_us/#definicion-boton-carga-anexo-3-vigente","text":"Se declara el bot\u00f3n de carga del anexo 3 vigente. load_a3base_button = tk.Button(mainMenu, text=\"Cargar Anexo 3 Vigente\", command=lambda: threading.Thread(target=vis_load_a3b).start(), bg=gris, fg=blanco) load_a3base_button.place(relx=0.15, rely=line_1 + 0.101)","title":"Definici\u00f3n Bot\u00f3n Carga Anexo 3 Vigente"},{"location":"archivo_panel_po_us/#definicion-boton-carga-anexo-4-vigente","text":"Se declara el bot\u00f3n de carga del anexo 4 vigente. load_a4base_button = tk.Button(mainMenu, text=\"Cargar Anexo 4 Vigente\", command=lambda: threading.Thread(target=vis_load_a4b).start(), bg=gris, fg=blanco) load_a4base_button.place(relx=0.15, rely=line_1 + 0.138)","title":"Definici\u00f3n Bot\u00f3n Carga Anexo 4 Vigente"},{"location":"archivo_panel_po_us/#definicion-boton-carga-consolidado-de-paradas","text":"Se declara el bot\u00f3n de carga del consolidado de paradas. load_consparadas_button = tk.Button(mainMenu, text=\"Cargar Cons. Paradas\", command=lambda: threading.Thread(target=vis_load_conspar).start(), bg=gris, fg=blanco) load_consparadas_button.place(relx=0.235, rely=line_1 + 0.065)","title":"Definici\u00f3n Bot\u00f3n Carga Consolidado de Paradas"},{"location":"archivo_panel_po_us/#definicion-boton-carga-consolidado-de-salidas","text":"Se declara el bot\u00f3n de carga del consolidado de salidas. load_conssalid_button = tk.Button(mainMenu, text=\"Cargar Cons. Salidas\", command=lambda: threading.Thread(target=vis_load_cons).start(), bg=gris, fg=blanco) load_conssalid_button.place(relx=0.235, rely=line_1 + 0.101)","title":"Definici\u00f3n Bot\u00f3n Carga Consolidado de Salidas"},{"location":"archivo_panel_po_us/#definicion-boton-carga-base-consolidado","text":"Se declara el bot\u00f3n de carga del archivo base consolidado. load_base_cons_button = tk.Button(mainMenu, text=\"Cargar Base Cons.\", command=lambda: threading.Thread(target=vis_load_base_cons).start(), bg=gris, fg=blanco) load_base_cons_button.place(relx=0.238, rely=line_1 + 0.138)","title":"Definici\u00f3n Bot\u00f3n Carga Base Consolidado"},{"location":"archivo_panel_po_us/#definicion-titulo-archivos-cargados","text":"Se declara el t\u00edtulo de archivos cargados. loaded_files_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Archivos Cargados', font='Helvetica 11 bold') loaded_files_title.place(relx=0.05, rely=0.25, relheight=0.055, relwidth=0.28)","title":"Definici\u00f3n T\u00edtulo \"Archivos Cargados\""},{"location":"archivo_panel_po_us/#definicion-cuadro-anexo-1-cargado","text":"Se declara el cuadro de anexo 1 cargado y estado. anexo1_title_label = tk.Label(mainMenu, text='Anexo 1 Nuevo:', borderwidth=1.5, relief=\"solid\") anexo1_title_label.place(relx=0.05, rely=0.315, relheight=0.04, relwidth=0.075) a1_filename = tk.StringVar() a1_filename.set('No cargado') anexo1_file_label = tk.Label(mainMenu, textvariable=a1_filename, borderwidth=1.5, relief=\"solid\") anexo1_file_label.place(relx=0.124, rely=0.315, relheight=0.04, relwidth=0.206)","title":"Definici\u00f3n Cuadro Anexo 1 Cargado"},{"location":"archivo_panel_po_us/#definicion-cuadro-anexo-3-cargado","text":"Se declara el cuadro de anexo 3 cargado y estado. anexo3_title_label = tk.Label(mainMenu, text='Anexo 3 Nuevo:', borderwidth=1.5, relief=\"solid\") anexo3_title_label.place(relx=0.05, rely=0.365, relheight=0.04, relwidth=0.075) a3_filename = tk.StringVar() a3_filename.set('No cargado') anexo3_file_label = tk.Label(mainMenu, textvariable=a3_filename, borderwidth=1.5, relief=\"solid\") anexo3_file_label.place(relx=0.124, rely=0.365, relheight=0.04, relwidth=0.206)","title":"Definici\u00f3n Cuadro Anexo 3 Cargado"},{"location":"archivo_panel_po_us/#definicion-cuadro-anexo-4-cargado","text":"Se declara el cuadro de anexo 4 cargado y estado. anexo4_title_label = tk.Label(mainMenu, text='Anexo 4 Nuevo:', borderwidth=1.5, relief=\"solid\") anexo4_title_label.place(relx=0.05, rely=0.415, relheight=0.04, relwidth=0.075) a4_filename = tk.StringVar() a4_filename.set('No cargado') anexo4_file_label = tk.Label(mainMenu, textvariable=a4_filename, borderwidth=1.5, relief=\"solid\") anexo4_file_label.place(relx=0.124, rely=0.415, relheight=0.04, relwidth=0.206)","title":"Definici\u00f3n Cuadro Anexo 4 Cargado"},{"location":"archivo_panel_po_us/#definicion-cuadro-anexo-3-vigente-cargado","text":"Se declara el cuadro de anexo 3 vigente cargado y estado. anexo3b_title_label = tk.Label(mainMenu, text='Anexo 3 Vigente:', borderwidth=1.5, relief=\"solid\") anexo3b_title_label.place(relx=0.05, rely=0.465, relheight=0.04, relwidth=0.075) a3b_filename = tk.StringVar() a3b_filename.set('No cargado') anexo3b_file_label = tk.Label(mainMenu, textvariable=a3b_filename, borderwidth=1.5, relief=\"solid\") anexo3b_file_label.place(relx=0.124, rely=0.465, relheight=0.04, relwidth=0.206)","title":"Definici\u00f3n Cuadro Anexo 3 Vigente Cargado"},{"location":"archivo_panel_po_us/#definicion-cuadro-anexo-4-vigente-cargado","text":"Se declara el cuadro de anexo 4 vigente cargado y estado. a4b_title_label = tk.Label(mainMenu, text='Anexo 4 Vigente:', borderwidth=1.5, relief=\"solid\") a4b_title_label.place(relx=0.05, rely=0.515, relheight=0.04, relwidth=0.075) a4b_filename = tk.StringVar() a4b_filename.set('No cargado') a4b_file_label = tk.Label(mainMenu, textvariable=a4b_filename, borderwidth=1.5, relief=\"solid\") a4b_file_label.place(relx=0.124, rely=0.515, relheight=0.04, relwidth=0.206)","title":"Definici\u00f3n Cuadro Anexo 4 Vigente Cargado"},{"location":"archivo_panel_po_us/#definicion-cuadro-consolidado-de-salidas-cargado","text":"Se declara el cuadro de archivo Consolidado de Salidas cargado y estado. conssalid_title_label = tk.Label(mainMenu, text='Cons. Salidas:', borderwidth=1.5, relief=\"solid\") conssalid_title_label.place(relx=0.05, rely=0.565, relheight=0.04, relwidth=0.075) conssalid_filename = tk.StringVar() conssalid_filename.set('No cargado') conssalid_file_label = tk.Label(mainMenu, textvariable=conssalid_filename, borderwidth=1.5, relief=\"solid\") conssalid_file_label.place(relx=0.124, rely=0.565, relheight=0.04, relwidth=0.206)","title":"Definici\u00f3n Cuadro Consolidado de Salidas Cargado"},{"location":"archivo_panel_po_us/#definicion-cuadro-consolidado-de-paradas-cargado","text":"Se declara el cuadro de archivo Consolidado de Paradas cargado y estado. conspar_label = tk.Label(mainMenu, text='Cons. Paradas:', borderwidth=1.5, relief=\"solid\") conspar_label.place(relx=0.05, rely=0.615, relheight=0.04, relwidth=0.075) conspar_filename = tk.StringVar() conspar_filename.set('No cargado') conspar_file_label = tk.Label(mainMenu, textvariable=conspar_filename, borderwidth=1.5, relief=\"solid\") conspar_file_label.place(relx=0.124, rely=0.615, relheight=0.04, relwidth=0.206)","title":"Definici\u00f3n Cuadro Consolidado de Paradas Cargado"},{"location":"archivo_panel_po_us/#definicion-cuadro-base-consolidado-cargado","text":"Se declara el cuadro de archivo Base Consolidado cargado y estado. base_cons_label = tk.Label(mainMenu, text='Base Consolidado:', borderwidth=1.5, relief=\"solid\") base_cons_label.place(relx=0.05, rely=0.665, relheight=0.04, relwidth=0.075) base_cons_filename = tk.StringVar() base_cons_filename.set('No cargado') base_cons_file_label = tk.Label(mainMenu, textvariable=base_cons_filename, borderwidth=1.5, relief=\"solid\") base_cons_file_label.place(relx=0.124, rely=0.665, relheight=0.04, relwidth=0.206)","title":"Definici\u00f3n Cuadro Base Consolidado Cargado"},{"location":"archivo_panel_po_us/#definicion-botones-gestion-archivos","text":"Se declaran los botones de guardar, cargar y limpiar (eliminar) archivos. save_allfiles_button = tk.Button(mainMenu, text=\"Guardar Anexos\", command=lambda: threading.Thread(target=save_all_anexos).start(), bg=gris, fg=blanco) save_allfiles_button.place(relx=0.075, rely=0.74) load_allfiles_button = tk.Button(mainMenu, text=\"Cargar Anexos\", command=lambda: threading.Thread(target=load_all_anexos).start(), bg=gris, fg=blanco) load_allfiles_button.place(relx=0.17, rely=0.74) clear_allfiles_button = tk.Button(mainMenu, text=\"Limpiar Anexos\", command=lambda: threading.Thread(target=clear_all_anexos).start(), bg=gris, fg=blanco) clear_allfiles_button.place(relx=0.255, rely=0.74)","title":"Definici\u00f3n Botones Gesti\u00f3n Archivos"},{"location":"archivo_panel_po_us/#definicion-seccion-seleccion-de-unidad","text":"Se declaran la etiqueta y la lista desplegable para seleccionar unidad de servicio. select_unidad_label = tk.Label(mainMenu, text='Selecciona unidad a revisar:', borderwidth=0, relief=\"solid\", bg=blanco, font='Helvetica 11') select_unidad_label.place(relx=0.06, rely=0.785, relheight=0.055, relwidth=0.115) unidad_combo = ttk.Combobox(values=[\"\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"]) unidad_combo.bind(\"<<ComboboxSelected>>\", selection_changed_main) unidad_combo.place(relx=0.18, rely=0.805)","title":"Definici\u00f3n Secci\u00f3n Selecci\u00f3n de Unidad"},{"location":"archivo_panel_po_us/#definicion-seccion-paso-0-revision","text":"Se declaran la etiqueta y los botones para revisiones Paso 0 paso0_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 0 (Revisi\u00f3n de Par\u00e1metros Faltantes)', wraplength=200, font='Helvetica 11 bold') paso0_title.place(relx=labels_line, rely=line_1, relheight=0.055, relwidth=width_label) a3_param_check_button = tk.Button(mainMenu, text=\"Revisar Par\u00e1metros Anexo 3\", command=lambda: threading.Thread(target=check_params_a3).start(), wraplength=90, bg=gris, fg=blanco) a3_param_check_button.place(relx=buttons_line, rely=line_1, relwidth=0.05) a4_param_check_button = tk.Button(mainMenu, text=\"Revisar Par\u00e1metros Anexo 4\", command=lambda: threading.Thread(target=check_params_a4).start(), wraplength=90, bg=gris, fg=blanco) a4_param_check_button.place(relx=buttons_line + 0.051, rely=line_1, relwidth=0.05)","title":"Definici\u00f3n Secci\u00f3n Paso 0 Revisi\u00f3n"},{"location":"archivo_panel_po_us/#definicion-seccion-paso-1-revision","text":"Se declaran la etiqueta y los botones para revisiones Paso 1 paso1_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 1 (Comparaci\u00f3n Anexo 3 Nuevo y Vigente)', wraplength=200, font='Helvetica 11 bold') paso1_title.place(relx=labels_line, rely=line_1 + 0.075, relheight=0.055, relwidth=width_label) comp_a3v_a3n_button = tk.Button(mainMenu, text=\"Compara Anexo 3 Nuevo y Vigente\", command=lambda: threading.Thread(target=comp_a3v_a3n_panel).start(), wraplength=182, bg=gris, fg=blanco) comp_a3v_a3n_button.place(relx=buttons_line, rely=line_1 + 0.082, relwidth=0.1)","title":"Definici\u00f3n Secci\u00f3n Paso 1 Revisi\u00f3n"},{"location":"archivo_panel_po_us/#definicion-seccion-paso-2-revision","text":"Se declaran la etiqueta y los botones para revisiones Paso 2. paso2_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 2 (Comparaci\u00f3n Horarios y Tabla Horaria)', wraplength=200, font='Helvetica 11 bold') paso2_title.place(relx=labels_line, rely=0.22, relheight=0.055, relwidth=width_label) comp_a1_a4_button = tk.Button(mainMenu, text=\"Revisar Consistencia Anexo 1 y Anexo 4\", command=lambda: threading.Thread(target=comp_time_a1_a4).start(), wraplength=170, bg=gris, fg=blanco) comp_a1_a4_button.place(relx=buttons_line, rely=0.23, relwidth=0.1)","title":"Definici\u00f3n Secci\u00f3n Paso 2 Revisi\u00f3n"},{"location":"archivo_panel_po_us/#definicion-seccion-paso-3-revision","text":"Se declaran la etiqueta y los botones para revisiones Paso 3. paso3_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 3 (Comparaci\u00f3n Par\u00e1metros y Tabla Horaria)', wraplength=200, font='Helvetica 11 bold') paso3_title.place(relx=labels_line, rely=0.3, relheight=0.055, relwidth=width_label) comp_a3_a4_button = tk.Button(mainMenu, text=\"Revisar Consistencia Anexo 3 y Anexo 4\", command=lambda: threading.Thread(target=comp_param_a3_a4).start(), wraplength=170, bg=gris, fg=blanco) comp_a3_a4_button.place(relx=buttons_line, rely=0.31, relwidth=0.1)","title":"Definici\u00f3n Secci\u00f3n Paso 3 Revisi\u00f3n"},{"location":"archivo_panel_po_us/#definicion-seccion-paso-41-revision-deshabilitados","text":"Se declaran la etiqueta y los botones para revisiones Paso 4.1 (Consistencia Agr MH). paso41_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 4.1 (Revisi\u00f3n de Consistencia de Agrupaci\u00f3n MH)', wraplength=200, font='Helvetica 11 bold') paso41_title.place(relx=labels_line, rely=0.38, relheight=0.055, relwidth=width_label) serr_salid_a3_button = tk.Button(mainMenu, text=\"Revisar Regularidad Salidas Anexo 3 (sin MHA)\", command=lambda: threading.Thread(target=method).start(), wraplength=120, bg=gris, fg=blanco) serr_salid_a3_button.place(relx=buttons_line, rely=0.38) serr_salid_a3_button[\"state\"] = \"disabled\" comp_a3_mha_opt_button = tk.Button(mainMenu, text=\"Revisar optimalidad de MHA Anexo 3\", command=lambda: threading.Thread(target=method).start(), wraplength=90, bg=gris, fg=blanco) comp_a3_mha_opt_button.place(relx=buttons_line + 0.062, rely=0.38) comp_a3_mha_opt_button[\"state\"] = 'disabled'","title":"Definici\u00f3n Secci\u00f3n Paso 4.1 Revisi\u00f3n (DESHABILITADOS)"},{"location":"archivo_panel_po_us/#definicion-seccion-paso-42-revision-en-desarrollo","text":"Se declaran la etiqueta y los botones para revisiones Paso 4.1 (Regularidad Intervalos). paso42_title = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Paso 4.2 (Revisi\u00f3n de Regularidad en Intervalos)', wraplength=200, font='Helvetica 11 bold') paso42_title.place(relx=labels_line, rely=0.46, relheight=0.067, relwidth=width_label) rev_interv_a4_1_button = tk.Button(mainMenu, text=\"Revisar Diferencias en intervalos Anexo 4 (con MHA)\", command=lambda: threading.Thread(target=check_intervalos_a4).start(), wraplength=100, bg=gris, fg=blanco) rev_interv_a4_1_button.place(relx=buttons_line, rely=0.46) rev_interv_a4_2_button = tk.Button(mainMenu, text=\"Revisar Diferencias en intervalos Anexo 4 (sin MHA)\", command=lambda: threading.Thread(target=method).start(), wraplength=100, bg=gris, fg=blanco) rev_interv_a4_2_button.place(relx=buttons_line + 0.058, rely=0.46) rev_interv_a4_2_button[\"state\"] = 'disabled'","title":"Definici\u00f3n Secci\u00f3n Paso 4.2 Revisi\u00f3n (en desarrollo)"},{"location":"archivo_panel_po_us/#definicion-seccion-generadores","text":"Se declaran la etiqueta de la secci\u00f3n de Generadores extrastep_title = tk.Label(mainMenu, bg=azul, fg=blanco, bd=4, text='Generadores', font='Helvetica 11 bold') extrastep_title.place(relx=labels_line, rely=line_1 + 0.49, relheight=0.045, relwidth=0.51)","title":"Definici\u00f3n Secci\u00f3n Generadores"},{"location":"archivo_panel_po_us/#definicion-seccion-generados-desde-anexo-4","text":"Se declaran la etiqueta y botones para generar archivos de anexos (1 y 3) desde Anexo 4. from_a4_title = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Desde Anexo 4', font='Helvetica 10 bold') from_a4_title.place(relx=labels_line, rely=line_1 + 0.546, relheight=0.045, relwidth=width_label) a1_from_a4_button = tk.Button(mainMenu, text=\"Genera Anexo 1 desde Anexo 4\", command=lambda: threading.Thread(target=save_a1_from_a4).start(), wraplength=90, bg=azul_deep, fg=blanco) a1_from_a4_button.place(relx=buttons_line, rely=line_1 + 0.546) a3_from_a4_button = tk.Button(mainMenu, text=\"Genera Anexo 3 desde Anexo 4\", command=lambda: threading.Thread(target=save_a3_from_a4).start(), wraplength=90, bg=azul_deep, fg=blanco) a3_from_a4_button.place(relx=buttons_line + 0.0504, rely=line_1 + 0.546)","title":"Definici\u00f3n Secci\u00f3n Generados desde Anexo 4"},{"location":"archivo_panel_po_us/#definicion-seccion-generados-desde-anexo-3","text":"Se declaran la etiqueta y botones para generar archivos de anexos desde Anexo 3. from_a3_title = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Desde Anexo 3', font='Helvetica 10 bold') from_a3_title.place(relx=labels_line + 0.28, rely=line_1 + 0.546, relheight=0.045, relwidth=width_label) a4_from_a3_button = tk.Button(mainMenu, text=\"Genera Anexo 4 desde Anexo 3\", command=lambda: threading.Thread(target=save_a4_from_a3).start(), wraplength=90, bg=azul_deep, fg=blanco) a4_from_a3_button.place(relx=buttons_line + 0.28, rely=line_1 + 0.546)","title":"Definici\u00f3n Secci\u00f3n Generados desde Anexo 3"},{"location":"archivo_panel_po_us/#definicion-seccion-generados-desde-consolidado","text":"Se declaran la etiqueta y botones para generar un Anexo 3 desde A3 Vigente y Consolidado. a3_from_cons_title = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Anexo 3 desde Consolidado', font='Helvetica 10 bold') a3_from_cons_title.place(relx=labels_line, rely=line_1 + 0.603, relheight=0.045, relwidth=width_label) a3_slds_w_base_button = tk.Button(mainMenu, text=\"Genera Salidas A3 desde Consolidado con A3 Vigente\", command=lambda: threading.Thread(target=save_a3_ns_w_base).start(), wraplength=150, bg=azul_deep, fg=blanco) a3_slds_w_base_button.place(relx=buttons_line, rely=line_1 + 0.603)","title":"Definici\u00f3n Secci\u00f3n Generados desde Consolidado"},{"location":"archivo_panel_po_us/#definicion-seccion-generacion-de-perfil-de-flota","text":"Se declaran la etiqueta y botones para generar un archivo de Perfil de Flota. perfil_flota_title = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='C\u00e1lculo Perfil de Flota', font='Helvetica 10 bold') perfil_flota_title.place(relx=labels_line, rely=line_1 + 0.66, relheight=0.045, relwidth=width_label) perfil_flota_button = tk.Button(mainMenu, text=\"Generar Archivo Perfil Flota\", command=lambda: threading.Thread(target=calc_perfil_flota).start(), wraplength=200, bg=azul_deep, fg=blanco) perfil_flota_button.place(relx=buttons_line, rely=line_1 + 0.667)","title":"Definici\u00f3n Secci\u00f3n Generaci\u00f3n de Perfil de Flota"},{"location":"archivo_panel_po_us/#definicion-seccion-generacion-de-consolidado","text":"Se declaran la etiqueta y botones para generar archivos de Consolidado. cons_us_title = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Consolidados US', font='Helvetica 10 bold') cons_us_title.place(relx=labels_line, rely=line_1 + 0.718, relheight=0.055, relwidth=width_label) cons_per_button = tk.Button(mainMenu, text=\"Generar Archivo Consolidado por Periodos\", command=lambda: threading.Thread(target=genera_cons_periodo_us).start(), wraplength=90, bg=azul_deep, fg=blanco) cons_per_button.place(relx=buttons_line, rely=line_1 + 0.718) cons_mh_button = tk.Button(mainMenu, text=\"Generar Archivo Consolidado por MH\", command=lambda: threading.Thread(target=genera_cons_mh_us).start(), wraplength=90, bg=azul_deep, fg=blanco) cons_mh_button.place(relx=buttons_line + 0.0518, rely=line_1 + 0.718)","title":"Definici\u00f3n Secci\u00f3n Generaci\u00f3n de Consolidado"},{"location":"archivo_panel_po_us/#definicion-seccion-generacion-de-nueva-agrupacion-para-a3","text":"Se declaran la etiqueta y botones para generar nueva agrupaci\u00f3n para el Anexo 3. a3_regroup = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Anexo 3 Reagrupado', font='Helvetica 10 bold') a3_regroup.place(relx=labels_line, rely=line_1 + 0.785, relheight=0.045, relwidth=width_label) a3_regroup_button = tk.Button(mainMenu, text=\"Generar Anexo 3 con Nueva Agrupaci\u00f3n MH\", command=lambda: threading.Thread(target=save_a3_regroup).start(), wraplength=150, bg=azul_deep, fg=blanco) a3_regroup_button.place(relx=buttons_line, rely=line_1 + 0.785)","title":"Definici\u00f3n Secci\u00f3n Generaci\u00f3n de Nueva Agrupaci\u00f3n para A3"},{"location":"archivo_panel_po_us/#definicion-seccion-conteo-de-km","text":"Se declaran la etiqueta y botones para generar ventana con conteo de kil\u00f3metros, para Anexos 3. cont_km_label = tk.Label(mainMenu, bg=celeste, fg=blanco, bd=4, text='Conteo de KM desde Anexo 3', font='Helvetica 10 bold') cont_km_label.place(relx=labels_line, rely=line_1 + 0.845, relheight=0.045, relwidth=width_label) contar_km_button = tk.Button(mainMenu, text=\"Contar KM totales de Anexo 3\", command=lambda: threading.Thread(target=contar_km).start(), wraplength=250, bg=azul_deep, fg=blanco) contar_km_button.place(relx=buttons_line, rely=line_1 + 0.853)","title":"Definici\u00f3n Secci\u00f3n Conteo de Km."},{"location":"archivo_panel_po_us/#definicion-seccion-consolidado-de-intervalos","text":"Se declaran la etiqueta y botones para generar ventana con An\u00e1lisis de Intervalos entre salidas programadas por periodo. cons_interv_label = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Revisi\u00f3n preliminar de Intervalos desde Consolidado de Salidas', wraplength=200, font='Helvetica 11 bold') cons_interv_label.place(relx=labels_line + 0.28, rely=line_1, relheight=0.065, relwidth=width_label) cons_interv_button = tk.Button(mainMenu, text=\"Validar Consolidado de Salidas\", command=lambda: threading.Thread(target=valid_cons_vis).start(), wraplength=90, bg=gris, fg=blanco) cons_interv_button.place(relx=labels_line + 0.4, rely=line_1 + 0.006)","title":"Definici\u00f3n Secci\u00f3n Consolidado de Intervalos"},{"location":"archivo_panel_po_us/#definicion-seccion-analisis-de-frecuencias","text":"Se declaran la etiqueta y botones para generar ventana con An\u00e1lisis de Frecuencias. analys_frec_label = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Revisi\u00f3n de Frecuencias', wraplength=200, font='Helvetica 11 bold') analys_frec_label.place(relx=labels_line + 0.28, rely=line_1 + 0.076, relheight=0.06, relwidth=width_label) analys_frec_button = tk.Button(mainMenu, text=\"Generar An\u00e1lisis de Frecuencias\", command=lambda: threading.Thread(target=analisis_frecuencias).start(), wraplength=90, bg=gris, fg=blanco) analys_frec_button.place(relx=labels_line + 0.4, rely=line_1 + 0.08 + 0.006)","title":"Definici\u00f3n Secci\u00f3n An\u00e1lisis de Frecuencias"},{"location":"archivo_panel_po_us/#definicion-seccion-revision-de-buses-biportales","text":"Se declaran la etiqueta y botones para generar ventana con para Revisi\u00f3n de Buses Biportales. biportal_label = tk.Label(mainMenu, bg=rojo, fg=blanco, bd=4, text='Revisi\u00f3n de Buses Biportales', wraplength=200, font='Helvetica 11 bold') biportal_label.place(relx=labels_line + 0.28, rely=line_1 + 0.146, relheight=0.06, relwidth=width_label) biportal_button = tk.Button(mainMenu, text=\"Revisar asignaci\u00f3n de buses biportales\", command=lambda: threading.Thread(target=revision_biportales_a4).start(), wraplength=90, bg=gris, fg=blanco) biportal_button.place(relx=labels_line + 0.4, rely=line_1 + 0.149)","title":"Definici\u00f3n Secci\u00f3n Revisi\u00f3n de Buses Biportales"}]}